{"version":3,"sources":["webpack:///src/app/tab5/tab5.page.html","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/tab5/tab5-routing.module.ts","webpack:///src/app/tab5/tab5.module.ts","webpack:///src/app/tab5/tab5.page.scss","webpack:///src/app/tab5/tab5.page.ts"],"names":["HttpService","http","ip","apiKey","username","pass","url","post","get","id","password","photo","idUser1","idUser2","status","idUser","title","coordinates","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","providedIn","LoadingService","loadingC","msg","create","message","spinner","mode","translucent","loading","present","onDidDismiss","role","data","dismiss","ToastService","toast","animation","time","color","animated","duration","position","cToast","routes","path","component","Tab5PageRoutingModule","imports","forChild","exports","Tab5PageModule","declarations","Tab5Page","toastS","authS","searchB","searchBar","users","friendReq","friendList","search","list","requests","you","getUser","getFriends","friendRequest","then","dat","JSON","parse","result","forEach","element","avatar","undefined","push","err","updateFriend","console","error","evt","val","target","value","aux","trim","getUserByUsername","friend","i","indexOf","find","x","splice","set","Set","createToastBottom","log","u2","user1","foreach","user","getFriendRequest","selector","template"],"mappings":"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","file":"tab5-tab5-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\r\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"this.searchB\\\">\\r\\n      <ion-button (click)=\\\"this.showSearch()\\\">\\r\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"textColor\\\">\\r\\n      AMIGOS\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-searchbar placeholder=\\\"Buscar\\\" (ionChange)=\\\"this.searchFriend($event)\\\" *ngIf=\\\"searchBar\\\"\\r\\n    (ionBlur)=\\\"this.closeSearch()\\\"> </ion-searchbar>\\r\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\r\\n    <ion-segment value=\\\"all\\\">\\r\\n      <ion-segment-button value=\\\"buscar\\\" class=\\\"background-button-toolbar\\\" (click)='this.goSearch()' class=\\\"background-button-toolbar1\\\">\\r\\n        BUSCAR\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"peticiones\\\" class=\\\"background-button-toolbar\\\" (click)='this.goRequest()' class=\\\"background-button-toolbar\\\">\\r\\n        PETICIONES\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"lista\\\" class=\\\"background-button-toolbar\\\" (click)='this.goList()' class=\\\"background-button-toolbar\\\">\\r\\n        LISTA\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"this.search\\\">\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let User of this.users; let i=index\\\">\\r\\n      <ion-buttons slot=\\\"end\\\">\\r\\n        <ion-button>\\r\\n          <ion-icon name=\\\"person-add-sharp\\\" (click)=\\\"this.sendFriendRequest(User)\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-buttons>\\r\\n      <ion-avatar>\\r\\n        <img src=\\\"{{User.avatar}}\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{User.username}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n<ion-content *ngIf=\\\"this.requests\\\">\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let User of this.friendReq; let i=index\\\">\\r\\n      <ion-icon (click)=\\\"this.acceptFriend(User.id)\\\" slot=\\\"end\\\" src=\\\"assets/icon/accept.svg\\\"></ion-icon>\\r\\n      <ion-icon slot=\\\"end\\\" src=\\\"assets/icon/cancel.svg\\\"></ion-icon>\\r\\n        <ion-avatar>\\r\\n          <img src=\\\"{{User.avatar}}\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label>{{User.username}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <p *ngIf = \\\"this.friendReq.length == 0\\\" style=\\\"text-align: center;\\\">\\r\\n    No tienes peticiones por ahora\\r\\n    <ion-icon src=\\\"assets/icon/sad.svg\\\"></ion-icon>\\r\\n  </p>\\r\\n</ion-content>\\r\\n\\r\\n<ion-content *ngIf=\\\"this.list\\\">\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let User of this.friendList; let i=index\\\">\\r\\n      <ion-avatar>\\r\\n        <img src=\\\"{{User.avatar}}\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>{{User.username}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\r\n  apiKey = \"HS$TF{nasiRYDk@#\";\r\n\r\n  constructor(private http: HTTP) { }\r\n\r\n  //GET methods\r\n\r\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user';\r\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/' + username;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getFriends(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/friend/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/request/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getRoutes(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getPhotos(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getLike(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  //POST methods\r\n\r\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/register';\r\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/avatar';\r\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/request';\r\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addRoute(idUser: any, title: string, coordinates: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/add';\r\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/add';\r\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/newPhoto';\r\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n\r\n  //PUT methods\r\n\r\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/profile/update';\r\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/update';\r\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/update';\r\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/update';\r\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  //DELETE methods\r\n\r\n  public deleteUser(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/remove/account/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteRoute(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/remove/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deletePhoto(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/remove/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n  constructor(private loadingC: LoadingController) { }\r\n\r\n  public async createLoadingMsg(msg:string){\r\n    const loading = await this.loadingC.create({\r\n      message: msg,\r\n      spinner: 'dots',\r\n      mode: 'ios',\r\n      translucent: true\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    const { role, data } = await loading.onDidDismiss();\r\n  }\r\n\r\n  public async createLoading(){\r\n    const loading = await this.loadingC.create({\r\n      spinner: 'dots',\r\n      mode: 'ios',\r\n      translucent: true\r\n    });\r\n\r\n    await loading.present();\r\n  }\r\n\r\n  public cancelLoading(){\r\n    this.loadingC.dismiss();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor(private toast: ToastController) { }\r\n\r\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\r\n    let cToast = await this.toast.create({\r\n      message: msg,\r\n      animated: animation,\r\n      duration: time,\r\n      position: \"top\",\r\n      color: color,\r\n      mode: \"ios\"\r\n    });\r\n    await cToast.present();\r\n  }\r\n\r\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\r\n    let cToast = await this.toast.create({\r\n      message: msg,\r\n      animated: animation,\r\n      duration: time,\r\n      position: 'bottom',\r\n      color: color,\r\n      mode: \"ios\"\r\n    });\r\n    await cToast.present();\r\n  }\r\n\r\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\r\n    let cToast = await this.toast.create({\r\n      message: msg,\r\n      animated: animation,\r\n      duration: time,\r\n      position: 'middle',\r\n      color: color,\r\n      mode: \"ios\"\r\n    });\r\n    await cToast.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Tab5Page } from './tab5.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab5Page\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class Tab5PageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Tab5PageRoutingModule } from './tab5-routing.module';\r\n\r\nimport { Tab5Page } from './tab5.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Tab5PageRoutingModule\r\n  ],\r\n  declarations: [Tab5Page]\r\n})\r\nexport class Tab5PageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjUvdGFiNS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Console } from 'console';\r\nimport { element } from 'protractor';\r\nimport { threadId } from 'worker_threads';\r\nimport { User } from '../model/User';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { HttpService } from '../services/http.service';\r\nimport { LoadingService } from '../services/loading.service';\r\nimport { ToastService } from '../services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-tab5',\r\n  templateUrl: './tab5.page.html',\r\n  styleUrls: ['./tab5.page.scss'],\r\n})\r\nexport class Tab5Page implements OnInit {\r\n\r\n  searchB = false;\r\n  searchBar = false;\r\n  users: User[] = [];\r\n  friendReq:User[]=[];\r\n  friendList:User[]=[];\r\n  user:User;\r\n  search = false;\r\n  list = true;\r\n  requests = false;\r\n  you:User;\r\n\r\n\r\n  constructor(private http: HttpService,\r\n    private toastS: ToastService,\r\n    private loading: LoadingService,\r\n    private authS: AuthService) {\r\n      this.you = this.authS.getUser();\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.getFriends();\r\n    this.friendRequest();\r\n  }\r\n\r\n  public goSearch(){\r\n    if(!this.search){\r\n      this.list=false;\r\n      this.requests = false;\r\n      this.search = true;\r\n      this.searchB = true;\r\n    }\r\n  }\r\n\r\n  public goList(){\r\n    if(!this.list){\r\n      this.search=false;\r\n      this.requests = false;\r\n      this.list = true;\r\n      this.getFriends();\r\n    }\r\n  }\r\n\r\n  public goRequest(){\r\n    if(!this.requests){\r\n      this.list=false;\r\n      this.search = false;\r\n      this.requests = true;\r\n      this.friendRequest();\r\n    }\r\n  }\r\n\r\n  showSearch() {\r\n    this.searchBar = true;\r\n  }\r\n\r\n  closeSearch() {\r\n    this.searchBar = false;\r\n  }\r\n\r\n  public getFriends(){\r\n    this.friendList = [];\r\n    this.http.getFriends(this.you.id).then((data)=>{\r\n      if(data){\r\n        let dat = JSON.parse(data.data);\r\n        if(dat.status==\"0\"){\r\n          dat.result.forEach(element => {\r\n            if(element.avatar == undefined){\r\n              element.avatar = \"assets/icon/usuario.svg\";\r\n            }\r\n            this.friendList.push(element);\r\n          });\r\n        }\r\n      }\r\n    }).catch((err)=>{\r\n\r\n    })\r\n  }\r\n\r\n\r\n  public acceptFriend(id){\r\n    this.http.updateFriend(id, 2, this.you.id).then((data)=>{\r\n      if(data){\r\n        let dat = JSON.parse(data.data);\r\n        if(dat.status==\"0\"){\r\n          //Toast ahora sois amigos\r\n        }else{\r\n          //Error\r\n        }\r\n      }\r\n      }).catch((err)=>{\r\n        console.error(\"Fallo al aceptar la peticion\");\r\n      })\r\n  }\r\n\r\n  public async searchFriend(evt: any) {\r\n    const val = evt.target.value;\r\n    this.users = [];\r\n    let aux: User[] = [];\r\n    let result;\r\n    if (val && val.trim() != '') {\r\n      this.http.getUserByUsername(val).then(async (data) => {\r\n        if (data) {\r\n          let dat = JSON.parse(data.data);\r\n          if (dat.status == \"0\") {\r\n            //Todo ok\r\n            dat.result.forEach(element => {\r\n              if(element.id != this.you.id){\r\n                    if(element.avatar == undefined){\r\n                      element.avatar = \"assets/icon/usuario.svg\";\r\n                    }\r\n                    aux.push(element);\r\n              }\r\n            });\r\n            this.friendList.forEach(friend => {\r\n              let i = aux.indexOf(aux.find( x => friend));\r\n              aux.splice(i, 1);\r\n            })\r\n            const set = new Set(aux);\r\n            result = [...set];\r\n            this.users = result;\r\n          }\r\n        } else {\r\n          //Error buscando usuario\r\n          await this.toastS.createToastBottom(\"No hay coincidencias\", true, 400, \"danger\");\r\n        }\r\n        \r\n      }).catch(async (err) => {\r\n        //Toast\r\n        await this.toastS.createToastBottom(\"No hay coincidencias\", true, 400, \"danger\");\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  public sendFriendRequest(u2){\r\n    console.log(\"USUARIO \" + u2);\r\n    let user1 = this.you;\r\n    this.http.updateFriend(user1.id, 1, u2.id).then(async (data) =>{\r\n      if(data) {\r\n        console.log(\"LAGGGGGGGGGGGGGGGGGGGG\");\r\n        let dat = JSON.parse(data.data);\r\n        if(dat.status == \"0\"){\r\n          dat.result.foreach(async element => {\r\n            await this.toastS.createToastBottom(\"Petición enviada con éxito\", true, 300, \"success\");\r\n          });\r\n        }\r\n      }\r\n    }).catch(async (err) => {\r\n      await this.toastS.createToastBottom(\"Error enviando petición pruebe más tarde\", true, 400, \"danger\");      \r\n    })\r\n  }\r\n\r\n  public friendRequest(){\r\n    this.user = this.authS.getUser();\r\n    this.friendReq = [];\r\n    this.http.getFriendRequest(this.user.id).then(async (data) => {\r\n      if (data) {\r\n        let dat = JSON.parse(data.data);\r\n        if (dat.status == \"0\") {\r\n          //Todo ok\r\n          dat.result.forEach(element => {\r\n            this.friendReq.push(element);\r\n          });\r\n        }\r\n      }\r\n    }).catch(async (err) => {\r\n      //Toast\r\n      await this.toastS.createToastBottom(\"Fallo al cargar peticiones de amistad\", true, 400, \"danger\");\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n}\r\n"]}