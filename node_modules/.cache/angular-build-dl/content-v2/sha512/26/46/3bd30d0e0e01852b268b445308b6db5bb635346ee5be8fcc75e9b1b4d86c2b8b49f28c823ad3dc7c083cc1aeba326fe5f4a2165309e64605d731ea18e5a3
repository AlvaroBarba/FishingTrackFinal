{"version":3,"sources":["webpack:///src/app/tab4/tab4.page.html","webpack:///src/app/services/http.service.ts","webpack:///src/app/tab4/tab4-routing.module.ts","webpack:///src/app/tab4/tab4.module.ts","webpack:///src/app/tab4/tab4.page.scss","webpack:///src/app/tab4/tab4.page.ts"],"names":["HttpService","http","ip","apiKey","username","pass","url","post","get","id","password","photo","idUser1","idUser2","status","idUser","title","coordinates","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","providedIn","routes","path","component","Tab4PageRoutingModule","imports","forChild","exports","Tab4PageModule","declarations","Tab4Page","authS","router","camera","croppedImagepath","isLoading","imagePickerOptions","maximumImagesCount","quality","usuario","getUser","avatar","getCountRoutes","nRoutes","then","data","dat","JSON","parse","result","forEach","element","rutas","err","logout","isLogged","navigate","undefined","myphoto","addAvatar","console","error","options","destinationType","DestinationType","DATA_URL","sourceType","PictureSourceType","PHOTOLIBRARY","saveToPhotoAlbum","getPicture","imageData","newAvatar","log","addPhoto","newPhoto","selector","template"],"mappings":"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","file":"tab4-tab4-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button menu=\\\"menu-main\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n    <ion-button (click)=\\\"this.logout()\\\"><ion-icon name=\\\"log-out-outline\\\"></ion-icon></ion-button>\\r\\n  </ion-buttons>\\r\\n    \\r\\n    <ion-title class=\\\"textColor\\\">\\r\\n      Perfil\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n  <ion-card color=\\\"light\\\">\\r\\n      <div class=\\\"img-wrapper\\\">\\r\\n        <ion-avatar slot=\\\"start\\\" (click)=\\\"this.getImage()\\\">\\r\\n          <img src=\\\"{{this.myphoto}}\\\">\\r\\n        </ion-avatar>\\r\\n      </div>\\r\\n    <ion-card-content class=\\\"ion-text-center\\\">\\r\\n      <h2 style=\\\"margin-top: 5%;\\\" class=\\\"textColor\\\">{{this.usuario.username}}</h2>\\r\\n      <ion-text color=\\\"medium\\\">\\r\\n      </ion-text>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-list>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"end\\\" name=\\\"chevron-forward-sharp\\\"></ion-icon>\\r\\n      <ion-label>Fotos</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"end\\\" name=\\\"chevron-forward-sharp\\\"></ion-icon>\\r\\n      <ion-label>Rutas</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon slot=\\\"end\\\" name=\\\"chevron-forward-sharp\\\"></ion-icon>\\r\\n      <ion-label>Todo</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\";","import { Injectable } from '@angular/core';\r\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\r\n  apiKey = \"HS$TF{nasiRYDk@#\";\r\n\r\n  constructor(private http: HTTP) { }\r\n\r\n  //GET methods\r\n\r\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user';\r\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/' + username;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getFriends(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/friend/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/request/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getRoutes(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getCountRoutes(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/routes/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getPhotos(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getLike(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  //POST methods\r\n\r\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/register';\r\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/avatar';\r\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/request';\r\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addRoute(idUser: any, title: string, coordinates: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/add';\r\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/add';\r\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/newPhoto';\r\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n\r\n  //PUT methods\r\n\r\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/profile/update';\r\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/update';\r\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/update';\r\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/update';\r\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  //DELETE methods\r\n\r\n  public deleteUser(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/remove/account/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteRoute(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/remove/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deletePhoto(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/remove/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Tab4Page } from './tab4.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab4Page\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class Tab4PageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Tab4PageRoutingModule } from './tab4-routing.module';\r\n\r\nimport { Tab4Page } from './tab4.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    Tab4PageRoutingModule\r\n  ],\r\n  declarations: [Tab4Page]\r\n})\r\nexport class Tab4PageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjQvdGFiNC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../model/User';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { HttpService } from '../services/http.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tab4',\r\n  templateUrl: './tab4.page.html',\r\n  styleUrls: ['./tab4.page.scss'],\r\n})\r\nexport class Tab4Page implements OnInit {\r\n\r\n  usuario : User;\r\n  nRoutes: number;\r\n  myphoto:any;\r\n\r\n  croppedImagepath = \"\";\r\n  isLoading = false;\r\n\r\n  imagePickerOptions = {\r\n    maximumImagesCount: 1,\r\n    quality: 50\r\n  };\r\n\r\n\r\n  constructor(\r\n    private authS: AuthService, \r\n    private router: Router, \r\n    private camera: Camera,\r\n    private http:HttpService  ) { \r\n    this.usuario = authS.getUser();\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.avatar();\r\n    this.getCountRoutes();\r\n  }\r\n\r\n  public getCountRoutes() {\r\n    this.nRoutes = 0;\r\n    this.http.getCountRoutes(this.usuario.id).then((data) => {\r\n      if (data) {\r\n        let dat = JSON.parse(data.data);\r\n        if (dat.status == \"0\") {\r\n          dat.result.forEach(element => {\r\n            this.nRoutes = element.rutas       \r\n          });\r\n        }\r\n      }\r\n    }).catch((err) => {});\r\n  }\r\n\r\n  public async logout(){\r\n    await this.authS.logout();\r\n    if(!this.authS.isLogged()){\r\n      this.router.navigate(['/welcome'])\r\n    }\r\n  }\r\n\r\n  public avatar(){\r\n    if(this.usuario.avatar == undefined || this.usuario.avatar == \"\"){\r\n      this.myphoto = \"assets/icon/usuario.svg\";\r\n    }else{\r\n      this.myphoto = this.usuario.avatar;\r\n    }\r\n   }\r\n\r\n   public newAvatar(photo){\r\n     this.http.addAvatar(photo, this.usuario.id).then((data)=>{\r\n       if(data){\r\n         let dat = JSON.parse(data.data);\r\n         if(dat.status!=\"0\"){\r\n           //Error\r\n           //toast error al subir foto\r\n           console.error(\"Error subiendo foto...\");\r\n         }\r\n       }\r\n     })\r\n   }\r\n\r\n   getImage():Promise<void> {\r\n    const options: CameraOptions = {\r\n      quality: 10,\r\n      destinationType: this.camera.DestinationType.DATA_URL,\r\n      sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\r\n      saveToPhotoAlbum:false\r\n    }\r\n    return this.camera.getPicture(options).then((imageData) => {\r\n       this.myphoto = 'data:image/jpeg;base64,' + imageData;\r\n       this.newAvatar(this.myphoto);\r\n          }, (err) => {\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  public newPhoto(photo){\r\n    this.http.addPhoto(this.usuario.id,\"titulo\",\"prueba\",photo ).then((data)=>{\r\n      if(data){\r\n        let dat = JSON.parse(data.data);\r\n        if(dat.status!=\"0\"){\r\n          //Error\r\n          //toast error al subir foto\r\n          console.error(\"Error subiendo foto...\");\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  insertImagen():Promise<void> {\r\n    const options: CameraOptions = {\r\n      quality: 10,\r\n      destinationType: this.camera.DestinationType.DATA_URL,\r\n      sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\r\n      saveToPhotoAlbum:false\r\n    }\r\n    return this.camera.getPicture(options).then((imageData) => {\r\n       this.myphoto = 'data:image/jpeg;base64,' + imageData;\r\n       this.newPhoto(this.myphoto);\r\n          }, (err) => {\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n}\r\n"]}