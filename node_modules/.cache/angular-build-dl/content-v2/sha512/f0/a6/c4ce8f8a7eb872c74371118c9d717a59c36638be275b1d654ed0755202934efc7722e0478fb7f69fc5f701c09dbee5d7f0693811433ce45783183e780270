{"version":3,"sources":["webpack:///src/app/pages/register/register.page.html","webpack:///src/app/pages/register/register.page.scss","webpack:///src/app/pages/register/register.page.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["RegisterPage","modalcontroller","formBuilder","http","authService","loading","toastS","regist","group","username","required","password","minLength","dismiss","createLoading","addUser","get","value","then","data","dat","JSON","parse","status","user","id","result","login","dismissRegister","createToastBottom","cancelLoading","err","console","error","selector","template","HttpService","ip","apiKey","pass","url","post","photo","idUser1","idUser2","idUser","title","coordinates","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","providedIn","LoadingService","loadingC","msg","create","message","spinner","mode","translucent","present","onDidDismiss","role","ToastService","toast","animation","time","color","animated","duration","position","cToast"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFA,YAAY;AAIvB,8BAAoBC,eAApB,EACUC,WADV,EAEUC,IAFV,EAGUC,WAHV,EAIUC,OAJV,EAKUC,MALV,EAKgC;AAAA;;AALZ,eAAAL,eAAA,GAAAA,eAAA;AACV,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACR,eAAKC,MAAL,GAAc,KAAKL,WAAL,CAAiBM,KAAjB,CAAuB;AACnCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADyB;AAEnCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAFyB,WAAvB,CAAd;AAIA;;AAdqB;AAAA;AAAA,qCAgBZ,CACV;AAjBsB;AAAA;AAAA,4CAmBD;AACpB,iBAAKX,eAAL,CAAqBY,OAArB;AACD;AArBsB;AAAA;AAAA,yCAuBE;;;;;;;;;AAEvB,6BAAM,KAAKR,OAAL,CAAaS,aAAb,EAAN;;;AACA;AACA,2BAAKX,IAAL,CAAUY,OAAV,CAAkB,KAAKR,MAAL,CAAYS,GAAZ,CAAgB,UAAhB,EAA4BC,KAA9C,EAAqD,KAAKV,MAAL,CAAYS,GAAZ,CAAgB,UAAhB,EAA4BC,KAAjF,EAAwFC,IAAxF,CAA6F,UAAOC,IAAP;AAAA,+BAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACrGA,IADqG;AAAA;AAAA;AAAA;;AAEnGC,qCAFmG,GAE7FC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACA,IAAhB,CAF6F;;AAAA,wCAGpGC,GAAG,CAACG,MAAJ,IAAY,GAHwF;AAAA;AAAA;AAAA;;AAIrG;AACA,uCAAKC,IAAL,GAAU;AACRC,sCAAE,EAACL,GAAG,CAACM,MADC;AAERjB,4CAAQ,EAAC,KAAKF,MAAL,CAAYS,GAAZ,CAAgB,UAAhB,EAA4BC;AAF7B,mCAAV;AALqG;AASrG,yCAAM,KAAKb,WAAL,CAAiBuB,KAAjB,CAAuB,KAAKH,IAA5B,CAAN;;AATqG;AAUrG,uCAAKI,eAAL;AAVqG;AAAA;;AAAA;AAYrG;AACA,uCAAKJ,IAAL,GAAU;AACRC,sCAAE,EAAC,CAAC,CADI;AAERhB,4CAAQ,EAAC;AAFD,mCAAV;AAbqG;AAiBrG,yCAAM,KAAKH,MAAL,CAAYuB,iBAAZ,CAA8B,mBAA9B,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,QAA9D,CAAN;;AAjBqG;AAAA;AAqBzG,yCAAM,KAAKxB,OAAL,CAAayB,aAAb,EAAN;;AArByG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAd;AAAA,uBAA7F,WAsBS,UAAOC,GAAP;AAAA,+BAAc;AAAA;AAAA;AAAA;AAAA;AACrB,uCAAKP,IAAL,GAAY;AACVC,sCAAE,EAAE,CAAC,CADK;AAEVhB,4CAAQ,EAAE;AAFA,mCAAZ,CADqB,CAKrB;;AALqB;AAMrB,yCAAM,KAAKH,MAAL,CAAYuB,iBAAZ,CAA8B,mBAA9B,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,QAA9D,CAAN;;AANqB;AAAA;AASrB,yCAAM,KAAKxB,OAAL,CAAayB,aAAb,EAAN;;AATqB;AAUrBE,yCAAO,CAACC,KAAR,CAAcF,GAAd;;AAVqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAd;AAAA,uBAtBT;;;;;;;;;AAkCE;AA7DmB;;AAAA;AAAA,S;;;;gBAZhB;;gBADA;;gBAIA;;gBADA;;gBAEA;;gBACA;;;;AAOI/B,kBAAY,6DALxB,gEAAU;AACTkC,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,wGAFS;;;;AAAA,OAAV,CAKwB,GAAZnC,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRAoC,WAAW;AAKtB,6BAAoBjC,IAApB,EAAgC;AAAA;;AAAZ,eAAAA,IAAA,GAAAA,IAAA;AAHb,eAAAkC,EAAA,GAAK,oDAAL;AACP,eAAAC,MAAA,GAAS,kBAAT;AAEmC,SALb,CAOtB;;;AAPsB;AAAA;AAAA,kCASP7B,QATO,EASW8B,IATX,EASuB;AAC3C,gBAAIC,GAAG,GAAG,KAAKH,EAAL,GAAU,OAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAY/B,QAAd;AAAwB,0BAAY8B;AAApC,aAApB,EAAgE;AAAE,wBAAU,KAAKD;AAAjB,aAAhE,CAAP;AACD;AAZqB;AAAA;AAAA,4CAcG7B,QAdH,EAcmB;AACvC,gBAAI+B,GAAG,GAAG,KAAKH,EAAL,GAAU,QAAV,GAAqB5B,QAA/B;AACA,mBAAO,KAAKN,IAAL,CAAUa,GAAV,CAAcwB,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AAjBqB;AAAA;AAAA,qCAmBJb,EAnBI,EAmBG;AACvB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,UAAV,GAAuBZ,EAAjC;AACA,mBAAO,KAAKtB,IAAL,CAAUa,GAAV,CAAcwB,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AAtBqB;AAAA;AAAA,2CAwBEb,EAxBF,EAwBS;AAC7B,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,wBAAV,GAAqCZ,EAA/C;AACA,mBAAO,KAAKtB,IAAL,CAAUa,GAAV,CAAcwB,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AA3BqB;AAAA;AAAA,oCA6BLb,EA7BK,EA6BE;AACtB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,SAAV,GAAsBZ,EAAhC;AACA,mBAAO,KAAKtB,IAAL,CAAUa,GAAV,CAAcwB,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AAhCqB;AAAA;AAAA,oCAkCLb,EAlCK,EAkCE;AACtB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,SAAV,GAAsBZ,EAAhC;AACA,mBAAO,KAAKtB,IAAL,CAAUa,GAAV,CAAcwB,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AArCqB;AAAA;AAAA,kCAuCPb,EAvCO,EAuCA;AACpB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUa,GAAV,CAAcwB,GAAd,EAAmB;AAAE,0BAAYf;AAAd,aAAnB,EAAuC;AAAE,wBAAU,KAAKa;AAAjB,aAAvC,CAAP;AACD,WA1CqB,CA4CtB;;AA5CsB;AAAA;AAAA,kCA8CP7B,QA9CO,EA8CWE,QA9CX,EA8C2B;AAC/C,gBAAI6B,GAAG,GAAG,KAAKH,EAAL,GAAU,gBAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAY/B,QAAd;AAAwB,0BAAYE;AAApC,aAApB,EAAoE;AAAE,wBAAU,KAAK2B;AAAjB,aAApE,CAAP;AACD;AAjDqB;AAAA;AAAA,oCAmDLI,KAnDK,EAmDUjB,EAnDV,EAmDgB;AACpC,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,cAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAC,wBAAUE,KAAX;AAAkB,oBAAKjB;AAAvB,aAApB,EAAgD;AAAE,wBAAU,KAAKa;AAAjB,aAAhD,CAAP;AACD;AAtDqB;AAAA;AAAA,2CAwDEK,OAxDF,EAwDgBC,OAxDhB,EAwD8BrB,MAxD9B,EAwD4C;AAChE,gBAAIiB,GAAG,GAAG,KAAKH,EAAL,GAAU,uBAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,yBAAWG,OAAb;AAAsB,yBAAWC,OAAjC;AAA0C,8BAAgBrB;AAA1D,aAApB,EAAwF;AAAE,wBAAU,KAAKe;AAAjB,aAAxF,CAAP;AACD;AA3DqB;AAAA;AAAA,mCA6DNO,MA7DM,EA6DOC,KA7DP,EA6DsBC,WA7DtB,EA6DsC;AAC1D,gBAAIP,GAAG,GAAG,KAAKH,EAAL,GAAU,YAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,wBAAUK,MAAZ;AAAoB,uBAASC,KAA7B;AAAoC,6BAAeC;AAAnD,aAApB,EAAsF;AAAE,wBAAU,KAAKT;AAAjB,aAAtF,CAAP;AACD;AAhEqB;AAAA;AAAA,mCAkENO,MAlEM,EAkEOC,KAlEP,EAkEsBE,WAlEtB,EAkEwCC,KAlExC,EAkEkD;AACtE,gBAAIT,GAAG,GAAG,KAAKH,EAAL,GAAU,YAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,wBAAUK,MAAZ;AAAoB,uBAASC,KAA7B;AAAoC,6BAAeE,WAAnD;AAAgE,qBAAOC;AAAvE,aAApB,EAAoG;AAAE,wBAAU,KAAKX;AAAjB,aAApG,CAAP;AACD;AArEqB;AAAA;AAAA,0CAuECY,OAvED,EAuEeC,OAvEf,EAuE2B;AAC/C,gBAAIX,GAAG,GAAG,KAAKH,EAAL,GAAU,iBAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,yBAAWU,OAAb;AAAsB,yBAAWC;AAAjC,aAApB,EAAgE;AAAE,wBAAU,KAAKb;AAAjB,aAAhE,CAAP;AACD;AA1EqB;AAAA;AAAA,kCA4EPY,OA5EO,EA4EOL,MA5EP,EA4EkB;AACtC,gBAAIL,GAAG,GAAG,KAAKH,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUsC,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYU,OAAd;AAAuB,yBAAWL;AAAlC,aAApB,EAAgE;AAAE,wBAAU,KAAKP;AAAjB,aAAhE,CAAP;AACD,WA/EqB,CAkFtB;;AAlFsB;AAAA;AAAA,qCAoFJ3B,QApFI,EAoFcF,QApFd,EAoF8B;AAClD,gBAAI+B,GAAG,GAAG,KAAKH,EAAL,GAAU,sBAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUiD,GAAV,CAAcZ,GAAd,EAAmB;AAAE,0BAAY7B,QAAd;AAAwB,0BAAYF;AAApC,aAAnB,EAAmE;AAAE,wBAAU,KAAK6B;AAAjB,aAAnE,CAAP;AACD;AAvFqB;AAAA;AAAA,uCAyFFb,EAzFE,EAyFOF,MAzFP,EAyFuB8B,GAzFvB,EAyF+B;AACnD,gBAAIb,GAAG,GAAG,KAAKH,EAAL,GAAU,sBAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUiD,GAAV,CAAcZ,GAAd,EAAmB;AAAE,oBAAMf,EAAR;AAAY,8BAAgBF,MAA5B;AAAoC,qBAAO8B;AAA3C,aAAnB,EAAqE;AAAE,wBAAU,KAAKf;AAAjB,aAArE,CAAP;AACD;AA5FqB;AAAA;AAAA,sCA8FHb,EA9FG,EA8FMqB,KA9FN,EA8FmB;AACvC,gBAAIN,GAAG,GAAG,KAAKH,EAAL,GAAU,eAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUiD,GAAV,CAAcZ,GAAd,EAAmB;AAAE,oBAAMf,EAAR;AAAY,uBAASqB;AAArB,aAAnB,EAAiD;AAAE,wBAAU,KAAKR;AAAjB,aAAjD,CAAP;AACD;AAjGqB;AAAA;AAAA,sCAmGHb,EAnGG,EAmGMqB,KAnGN,EAmGqBE,WAnGrB,EAmGwC;AAC5D,gBAAIR,GAAG,GAAG,KAAKH,EAAL,GAAU,eAApB;AACA,mBAAO,KAAKlC,IAAL,CAAUiD,GAAV,CAAcZ,GAAd,EAAmB;AAAE,oBAAMf,EAAR;AAAY,uBAASqB,KAArB;AAA4B,6BAAeE;AAA3C,aAAnB,EAA6E;AAAE,wBAAU,KAAKV;AAAjB,aAA7E,CAAP;AACD,WAtGqB,CAwGtB;;AAxGsB;AAAA;AAAA,qCA0GJb,EA1GI,EA0GG;AACvB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,uBAAV,GAAoCZ,EAA9C;AACA,mBAAO,KAAKtB,IAAL,WAAiBqC,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AA7GqB;AAAA;AAAA,uCA+GFb,EA/GE,EA+GO6B,QA/GP,EA+GoB;AACxC,gBAAId,GAAG,GAAG,KAAKH,EAAL,GAAU,QAAV,GAAqBZ,EAArB,GAA0B,UAA1B,GAAuC6B,QAAjD;AACA,mBAAO,KAAKnD,IAAL,WAAiBqC,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AAlHqB;AAAA;AAAA,sCAoHHb,EApHG,EAoHI;AACxB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,gBAAV,GAA6BZ,EAAvC;AACA,mBAAO,KAAKtB,IAAL,WAAiBqC,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AAvHqB;AAAA;AAAA,sCAyHHb,EAzHG,EAyHI;AACxB,gBAAIe,GAAG,GAAG,KAAKH,EAAL,GAAU,gBAAV,GAA6BZ,EAAvC;AACA,mBAAO,KAAKtB,IAAL,WAAiBqC,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AA5HqB;AAAA;AAAA,qCA8HJiB,QA9HI,EA8HWC,OA9HX,EA8HuB;AAC3C,gBAAIhB,GAAG,GAAG,KAAKH,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKlC,IAAL,WAAiBqC,GAAjB,EAAsB;AAAE,0BAAYe,QAAd;AAAwB,yBAAWC;AAAnC,aAAtB,EAAoE;AAAE,wBAAU,KAAKlB;AAAjB,aAApE,CAAP;AACD;AAjIqB;;AAAA;AAAA,S;;;;gBALf;;;;AAKIF,iBAAW,6DAHvB,iEAAW;AACVqB,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAXrB,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAsB,cAAc;AAEzB,gCAAoBC,QAApB,EAAiD;AAAA;;AAA7B,eAAAA,QAAA,GAAAA,QAAA;AAAgC;;AAF3B;AAAA;AAAA,2CAIKC,GAJL,EAIe;;;;;;;;;AACtB,6BAAM,KAAKD,QAAL,CAAcE,MAAd,CAAqB;AACzCC,+BAAO,EAAEF,GADgC;AAEzCG,+BAAO,EAAE,MAFgC;AAGzCC,4BAAI,EAAE,KAHmC;AAIzCC,mCAAW,EAAE;AAJ4B,uBAArB,CAAN;;;AAAV5D,6B;;AAON,6BAAMA,OAAO,CAAC6D,OAAR,EAAN;;;;AAEuB,6BAAM7D,OAAO,CAAC8D,YAAR,EAAN;;;;AAAfC,0B,yBAAAA,I;AAAMjD,0B,yBAAAA,I;;;;;;;;;AACf;AAfwB;AAAA;AAAA,0CAiBC;;;;;;;;AACR,6BAAM,KAAKwC,QAAL,CAAcE,MAAd,CAAqB;AACzCE,+BAAO,EAAE,MADgC;AAEzCC,4BAAI,EAAE,KAFmC;AAGzCC,mCAAW,EAAE;AAH4B,uBAArB,CAAN;;;AAAV5D,6B;;AAMN,6BAAMA,OAAO,CAAC6D,OAAR,EAAN;;;;;;;;;AACD;AAzBwB;AAAA;AAAA,0CA2BL;AAClB,iBAAKP,QAAL,CAAc9C,OAAd;AACD;AA7BwB;;AAAA;AAAA,S;;;;gBALlB;;;;AAKI6C,oBAAc,6DAH1B,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAG0B,GAAdC,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAW,YAAY;AAEvB,8BAAoBC,KAApB,EAA4C;AAAA;;AAAxB,eAAAA,KAAA,GAAAA,KAAA;AAA2B;;AAFxB;AAAA;AAAA,yCAIKV,GAJL,EAIiBW,SAJjB,EAIoCC,IAJpC,EAIiDC,KAJjD,EAI6D;;;;;;;;AACrE,6BAAM,KAAKH,KAAL,CAAWT,MAAX,CAAkB;AACnCC,+BAAO,EAAEF,GAD0B;AAEnCc,gCAAQ,EAAEH,SAFyB;AAGnCI,gCAAQ,EAAEH,IAHyB;AAInCI,gCAAQ,EAAE,KAJyB;AAKnCH,6BAAK,EAAEA,KAL4B;AAMnCT,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATa,4B;;AAQJ,6BAAMA,MAAM,CAACX,OAAP,EAAN;;;;;;;;;AACD;AAdsB;AAAA;AAAA,4CAgBQN,GAhBR,EAgBoBW,SAhBpB,EAgBuCC,IAhBvC,EAgBoDC,KAhBpD,EAgBgE;;;;;;;;AACxE,6BAAM,KAAKH,KAAL,CAAWT,MAAX,CAAkB;AACnCC,+BAAO,EAAEF,GAD0B;AAEnCc,gCAAQ,EAAEH,SAFyB;AAGnCI,gCAAQ,EAAEH,IAHyB;AAInCI,gCAAQ,EAAE,QAJyB;AAKnCH,6BAAK,EAAEA,KAL4B;AAMnCT,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATa,4B;;AAQJ,6BAAMA,MAAM,CAACX,OAAP,EAAN;;;;;;;;;AACD;AA1BsB;AAAA;AAAA,4CA4BQN,GA5BR,EA4BoBW,SA5BpB,EA4BuCC,IA5BvC,EA4BoDC,KA5BpD,EA4BgE;;;;;;;;AACxE,6BAAM,KAAKH,KAAL,CAAWT,MAAX,CAAkB;AACnCC,+BAAO,EAAEF,GAD0B;AAEnCc,gCAAQ,EAAEH,SAFyB;AAGnCI,gCAAQ,EAAEH,IAHyB;AAInCI,gCAAQ,EAAE,QAJyB;AAKnCH,6BAAK,EAAEA,KAL4B;AAMnCT,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATa,4B;;AAQJ,6BAAMA,MAAM,CAACX,OAAP,EAAN;;;;;;;;;AACD;AAtCsB;;AAAA;AAAA,S;;;;gBALhB;;;;AAKIG,kBAAY,6DAHxB,iEAAW;AACVZ,kBAAU,EAAE;AADF,OAAX,CAGwB,GAAZY,YAAY,CAAZ","file":"default~pages-register-register-module~pages-welcome-welcome-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button (click)=\\\"this.dismissRegister()\\\" defaultHref=\\\"/welcome\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"textColor\\\">REGISTRARSE</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content padding>\\r\\n  <div class=\\\"content\\\">\\r\\n    <form [formGroup]=\\\"regist\\\" (ngSubmit)=\\\"this.registration()\\\">\\r\\n      <ion-item>\\r\\n        <ion-input type=\\\"user\\\" formControlName=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n                <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Contraseña\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-button type=\\\"submit\\\" shape=\\\"round\\\" color=\\\"danger\\\" [disabled]=\\\"!regist.valid\\\">Registrarse</ion-button>\\r\\n    </form>\\r\\n  </div>\\r\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { User } from 'src/app/model/User';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { HttpService } from 'src/app/services/http.service';\r\nimport { LoadingService } from 'src/app/services/loading.service';\r\nimport { ToastService } from 'src/app/services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  public user:User;\r\n  public regist: FormGroup;\r\n\r\n  constructor(private modalcontroller: ModalController,\r\n    private formBuilder: FormBuilder,\r\n    private http: HttpService,\r\n    private authService: AuthService,\r\n    private loading: LoadingService,\r\n    private toastS: ToastService) {\r\n    this.regist = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public dismissRegister(){\r\n    this.modalcontroller.dismiss();\r\n  }\r\n\r\n  public async registration(){\r\n    //Creando Loading\r\n    await this.loading.createLoading();\r\n    //Añadir nuevo usuario\r\n    this.http.addUser(this.regist.get(\"username\").value, this.regist.get(\"password\").value).then(async (data)=>{\r\n      if (data) {\r\n        let dat = JSON.parse(data.data);\r\n        if(dat.status==\"0\"){\r\n          //Todo ok\r\n          this.user={\r\n            id:dat.result,\r\n            username:this.regist.get(\"username\").value\r\n          }\r\n          await this.authService.login(this.user);\r\n          this.dismissRegister();\r\n        }else{\r\n          //Error\r\n          this.user={\r\n            id:-1,\r\n            username:\"\"\r\n          }\r\n          await this.toastS.createToastBottom(\"Usuario en uso...\", true, 400, \"danger\");\r\n        }\r\n      }\r\n      //Eliminando loading\r\n      await this.loading.cancelLoading();\r\n    }).catch(async (err) =>{\r\n      this.user = {\r\n        id: -1,\r\n        username: ''\r\n      }\r\n      //toast\r\n      await this.toastS.createToastBottom(\"Usuario en uso...\", true, 400, \"danger\");\r\n\r\n      //Eliminando loading\r\n      await this.loading.cancelLoading();\r\n      console.error(err);\r\n    }\r\n    )}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\r\n  apiKey = \"HS$TF{nasiRYDk@#\";\r\n\r\n  constructor(private http: HTTP) { }\r\n\r\n  //GET methods\r\n\r\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user';\r\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/' + username;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getFriends(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/friend/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/request/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getRoutes(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getPhotos(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/' + id;\r\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public getLike(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  //POST methods\r\n\r\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/register';\r\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/avatar';\r\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/request';\r\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addRoute(idUser: any, title: string, coordinates: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/add';\r\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/add';\r\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/newPhoto';\r\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n\r\n  //PUT methods\r\n\r\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/profile/update';\r\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/friends/update';\r\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/update';\r\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/update';\r\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  //DELETE methods\r\n\r\n  public deleteUser(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/remove/account/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteRoute(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/route/remove/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deletePhoto(id: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/remove/' + id;\r\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\r\n  }\r\n\r\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\r\n    let url = this.ip + '/photo/like';\r\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n  constructor(private loadingC: LoadingController) { }\r\n\r\n  public async createLoadingMsg(msg:string){\r\n    const loading = await this.loadingC.create({\r\n      message: msg,\r\n      spinner: 'dots',\r\n      mode: 'ios',\r\n      translucent: true\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    const { role, data } = await loading.onDidDismiss();\r\n  }\r\n\r\n  public async createLoading(){\r\n    const loading = await this.loadingC.create({\r\n      spinner: 'dots',\r\n      mode: 'ios',\r\n      translucent: true\r\n    });\r\n\r\n    await loading.present();\r\n  }\r\n\r\n  public cancelLoading(){\r\n    this.loadingC.dismiss();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n\r\n  constructor(private toast: ToastController) { }\r\n\r\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\r\n    let cToast = await this.toast.create({\r\n      message: msg,\r\n      animated: animation,\r\n      duration: time,\r\n      position: \"top\",\r\n      color: color,\r\n      mode: \"ios\"\r\n    });\r\n    await cToast.present();\r\n  }\r\n\r\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\r\n    let cToast = await this.toast.create({\r\n      message: msg,\r\n      animated: animation,\r\n      duration: time,\r\n      position: 'bottom',\r\n      color: color,\r\n      mode: \"ios\"\r\n    });\r\n    await cToast.present();\r\n  }\r\n\r\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\r\n    let cToast = await this.toast.create({\r\n      message: msg,\r\n      animated: animation,\r\n      duration: time,\r\n      position: 'middle',\r\n      color: color,\r\n      mode: \"ios\"\r\n    });\r\n    await cToast.present();\r\n  }\r\n}\r\n"]}