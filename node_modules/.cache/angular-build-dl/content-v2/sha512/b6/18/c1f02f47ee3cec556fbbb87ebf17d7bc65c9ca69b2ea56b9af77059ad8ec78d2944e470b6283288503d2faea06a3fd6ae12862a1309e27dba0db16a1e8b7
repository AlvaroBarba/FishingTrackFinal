{"version":3,"sources":["webpack:///src/app/components/mapa/mapa.component.html","webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/components/mapa/mapa.component.scss","webpack:///src/app/components/mapa/mapa.component.ts","webpack:///src/app/tab1/tab1-routing.module.ts","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["MapaComponent","created","id","createMap","miMapa","route","attribution","addTo","setView","setTimeout","invalidateSize","myroute","JSON","parse","line","fitBounds","getBounds","on","addData","type","features","setZoom","setStyle","color","opacity","selector","template","routes","path","component","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","Tab1Page","toast","http","authS","camera","paraTi","fotos","rutas","friends","friendsRoutes","mapas","you","getUser","avatar","undefined","pestanaParaTi","getFriends","getOwnRoutes","getRoutes","then","data","dat","status","result","forEach","element","title","username","coordinates","push","err","createToastBottom","aux","getFriendsRoutes","length","friend"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<div [attr.id]=\\\"this.route\\\" style=\\\"position:absolute; height: 100%; width: 100%;\\\"></div>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-segment value=\\\"all\\\">\\n      <ion-segment-button value=\\\"parati\\\" class=\\\"background-button-toolbar1\\\" (click)='this.pestanaParaTi()'>\\n        Amigos\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"fotos\\\" class=\\\"background-button-toolbar\\\" (click)='this.pestanaRutas()'>\\n        TÃº\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" *ngIf='this.paraTi'>\\n  <ion-card style=\\\"height: 70%; width: 100%;\\\" *ngFor=\\\"let Route of this.friendsRoutes; let i=index;\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"{{this.Route.avatar}}\\\">\\n        </ion-avatar>\\n        <ion-label>{{this.Route.username}}</ion-label>\\n      </ion-item>\\n    </ion-list>\\n    <ion-card-title style=\\\"margin-left: 5%; margin-bottom: 3.5%;\\\"> {{Route.title}}</ion-card-title>\\n    <app-mapa [attr.id]=\\\"i\\\" route=\\\"{{i}}\\\" line=\\\"{{this.Route.coordinates}}\\\" title=\\\"this.title\\\"\\n      style=\\\"position: absolute; height: 50%; width: 100%;\\\">\\n    </app-mapa>\\n  </ion-card>\\n</ion-content>\\n\\n<ion-content [fullscreen]=\\\"true\\\" *ngIf='this.rutas'>\\n  <ion-card style=\\\"height: 70%; width: 100%;\\\" *ngFor=\\\"let Route of this.routes; let i=index;\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"{{this.you.avatar}}\\\">\\n        </ion-avatar>\\n        <ion-label>{{this.you.username}}</ion-label>\\n      </ion-item>\\n    </ion-list>\\n    <ion-card-title style=\\\"margin-left: 5%; margin-bottom: 3.5%;\\\"> {{Route.title}}</ion-card-title>\\n    <app-mapa [attr.id]=\\\"i\\\" route=\\\"{{i}}\\\" line=\\\"{{this.Route.coordinates}}\\\" title=\\\"this.title\\\"\\n      style=\\\"position: absolute; height: 50%; width: 100%;\\\">\\n    </app-mapa>\\n  </ion-card>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFwYS9tYXBhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core'\nimport { GeoJSON,geoJSON, Map, Marker, marker, Point, tileLayer } from 'leaflet';\n\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.scss'],\n})\nexport class MapaComponent implements OnInit {\n\n  created = false;\n  miMapa:Map;\n  @Input() line: any\n  title:string;\n  @Input() route;\n  id:string = \"\";\n  center: any;\n  \n\n  constructor() { }\n\n  ngOnInit() {\n    this.createMap();\n  }\n\n  public createMap() {\n    this.created = true;\n    this.miMapa = new Map(this.route);\n    tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n}).addTo(this.miMapa);\n\n  this.miMapa.setView([40,-3], 10);\n\n    setTimeout(() => {\n      this.miMapa.invalidateSize();\n    }, 400);\n    let myroute:GeoJSON=new GeoJSON(JSON.parse(this.line));\n    \n    myroute.addTo(this.miMapa);\n    this.miMapa.fitBounds(myroute.getBounds());\n\n    this.miMapa.on(\"load\",()=>{\n    let myroute:GeoJSON=new GeoJSON();\n    myroute.addTo(this.miMapa);\n    myroute.addData({\n      type:\"FeatureCollection\",\n      features: [this.line]\n    }as any);\n    });\n    this.miMapa.setZoom(17);\n    myroute.setStyle({\n      color: \"red\",\n      opacity: 60\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\nimport { MapaComponent } from '../components/mapa/mapa.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page, MapaComponent]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component, Input } from '@angular/core';\nimport { Map } from 'leaflet';\nimport { User } from '../model/User';\nimport { AuthService } from '../services/auth.service';\nimport { HttpService } from '../services/http.service';\nimport { Camera } from '@ionic-native/camera/ngx';\nimport { ToastService } from '../services/toast.service';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  private paraTi = true;\n  private fotos = false;\n  private rutas = false;\n  private friends: User[] = [];\n  public routes = [];\n  public friendsRoutes = [];\n  private you: User;\n  public mapas: Map[] = [];\n  public line: any;\n\n  constructor(\n    private toast: ToastService,\n    private http: HttpService,\n    private authS: AuthService,\n    private camera: Camera) {\n    this.you = this.authS.getUser();\n    if(this.you.avatar == undefined || this.you.avatar == null){\n      this.you.avatar = \"assets/icon/usuario.svg\"\n    }\n  }\n\n  ionViewWillEnter() {\n    this.paraTi = true;\n    this.pestanaParaTi();\n  }\n\n  public pestanaParaTi() {\n    if (!this.paraTi) {\n      this.rutas = false;\n      this.paraTi = true;\n      this.getFriends();\n    }\n  }\n\n  public pestanaRutas() {\n    if (!this.rutas) {\n      this.paraTi = false;\n      this.rutas = true;\n      this.getOwnRoutes();\n\n    }\n  }\n\n  public getOwnRoutes() {\n    this.routes = [];\n    this.mapas = [];\n    this.line = null;\n    if (this.you.id != -1) {\n      this.http.getRoutes(this.you.id).then((data) => {\n        if (data) {\n          let dat = JSON.parse(data.data);\n          if (dat.status == \"0\") {\n            //todo ok\n            dat.result.forEach(element => {\n              let route = {\n                title: element.title,\n                username: this.you.username,\n                avatar: this.you.avatar,\n                coordinates: element.coordinates\n\n              }\n              this.routes.push(route);\n            });\n          }\n        }\n      }).catch((err) => {\n        this.toast.createToastBottom(\"Revise su conexiÃ³n a internet...\", true, 400, \"warning\");\n      });\n    }\n  }\n\n  public getFriends() {\n    this.friends = [];\n    this.http.getFriends(this.you.id).then((data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          //Todo ok\n          dat.result.forEach(element => {\n            let aux = {\n              id: element.id,\n              username: element.username,\n              avatar: element.avatar\n            }\n            this.friends.push(aux);\n            this.getFriendsRoutes();\n          });\n        }\n      }\n    }).catch((err) => {\n      this.toast.createToastBottom(\"Revise su conexiÃ³n a internet...\", true, 400, \"warning\");\n    });\n  }\n\n  public getFriendsRoutes() {\n    if (this.friends.length > 0) {\n      this.friends.forEach((friend) => {\n        this.http.getRoutes(friend.id).then((data) => {\n          if (data) {\n            let dat = JSON.parse(data.data);\n            if (dat.status == \"0\") {\n              //todo ok\n              let route = {\n                title: dat.result.title,\n                username: friend.username,\n                avatar: friend.avatar,\n                coordinates: dat.result.coordinates\n              }\n              this.friendsRoutes.push(route);\n            }\n          }\n        }).catch((err) => {\n          //toast\n          this.toast.createToastBottom(\"Revise su conexiÃ³n a internet...\", true, 400, \"warning\");\n        });\n      });\n    }\n  }\n}\n"]}