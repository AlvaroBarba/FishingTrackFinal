{"version":3,"sources":["webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","AuthService","storage","router","user","id","username","password","avatar","setItem","navigate","route","isLogged","providedIn","HttpService","http","ip","apiKey","pass","url","post","get","idUser1","idUser2","status","idUser","title","coordinates","description","image","idPhoto","idRoute","put","idFriend","id_photo","id_user","LoadingService","loadingC","msg","create","message","spinner","mode","translucent","loading","present","onDidDismiss","role","data","dismiss","ToastService","toast","animation","time","color","animated","duration","position","cToast"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { User } from '../model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements CanActivate {\n\n  public user = {\n    id: -1,\n    username: '',\n    password: '',\n    avatar: ''\n  }\n\n  constructor(private storage: NativeStorage,\n    private router: Router) {\n  }\n\n  public async logout() {\n    this.user = {\n      id: -1,\n      username: '',\n      password: '',\n      avatar: ''\n    }\n    await this.storage.setItem(\"user\", this.user);\n    this.router.navigate([\"login\"]);\n  }\n\n  public async login(user: User) {\n    this.user = await this.storage.setItem(\"user\", user);\n    this.router.navigate([\"/\"]);\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    if (!this.isLogged()) {\n      this.router.navigate([\"welcome\"]);\n      return false;\n    }\n    return true;\n  }\n\n  isLogged():boolean{\n    if(this.user.id!=-1){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  getUser() {\n    return this.user;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\npublic ip = \"http://172.16.16.147:3021\";\napiKey = \"HS$TF{nasiRYDk@#\";\n\n  constructor(private http: HTTP) { }\n\n  //GET methods\n\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user';\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\n  }\n\n  public getUserByUsername(username:string):Promise<HTTPResponse>{\n    let url = this.ip + '/user/' + username;\n    return this.http.get(url, {},{ 'apikey': this.apiKey });\n  }\n\n  public getFriendRequest(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/user/friends/request/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getRoutes(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/route/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getPhotos(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getLike(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/like';\n    return this.http.get(url, { 'id_photo':id }, { 'apikey': this.apiKey });\n  }\n\n  //POST methods\n\n  public addUser(username:string, password:string):Promise<HTTPResponse>{\n    let url = this.ip + '/user/register';\n    return this.http.post(url, { 'username':username, 'password':password }, { 'apikey': this.apiKey });\n  }\n\n  public addFriendRequest(idUser1:any, idUser2:any, status:number):Promise<HTTPResponse>{\n    let url = this.ip + '/user/friends/request';\n    return this.http.post(url, { 'idUser1':idUser1, 'idUser2':idUser2, 'friendStatus':status }, { 'apikey': this.apiKey });\n  }\n\n  public addRoute(idUser:any, title:string, coordinates:any):Promise<HTTPResponse>{\n    let url = this.ip + '/route/add';\n    return this.http.post(url, { 'idUser':idUser, 'title':title, 'coordinates':coordinates }, { 'apikey': this.apiKey });\n  }\n\n  public addPhoto(idUser:any, title:string, description:any, image:any):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/add';\n    return this.http.post(url, { 'idUser':idUser, 'title':title, 'description':description, 'url':image }, { 'apikey': this.apiKey });\n  }\n\n  public addPhotoToRoute(idPhoto:any, idRoute:any):Promise<HTTPResponse>{\n    let url = this.ip + '/route/newPhoto';\n    return this.http.post(url, { 'idPhoto':idPhoto, 'idRoute':idRoute }, { 'apikey': this.apiKey });\n  }\n\n  public addLike(idPhoto:any, idUser:any):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/like';\n    return this.http.post(url, { 'id_photo':idPhoto, 'id_user':idUser }, { 'apikey': this.apiKey });\n  }\n\n\n  //PUT methods\n\n  public updateUser(password:string, username:string):Promise<HTTPResponse>{\n    let url = this.ip + '/user/profile/update';\n    return this.http.put(url, { 'password':password, 'username':username }, { 'apikey': this.apiKey });\n  }\n\n  public updateFriend(id:any, status:number):Promise<HTTPResponse>{\n    let url = this.ip + '/user/friends/update';\n    return this.http.put(url, { 'id':id, 'friendStatus':status }, { 'apikey': this.apiKey });\n  }\n\n  public updateRoute(id:any, title:string):Promise<HTTPResponse>{\n    let url = this.ip + '/route/update';\n    return this.http.put(url, { 'id':id, 'title':title }, { 'apikey': this.apiKey });\n  }\n\n  public updatePhoto(id:any, title:string, description:string):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/update';\n    return this.http.put(url, { 'id':id, 'title':title, 'description':description }, { 'apikey': this.apiKey });\n  }\n\n  //DELETE methods\n\n  public deleteUser(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/user/remove/account/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteFriend(id:any, idFriend:any):Promise<HTTPResponse>{\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteRoute(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/route/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deletePhoto(id:any):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteLike(id_photo:any, id_user:any):Promise<HTTPResponse>{\n    let url = this.ip + '/photo/like';\n    return this.http.delete(url, {'id_photo':id_photo, 'id_user':id_user}, { 'apikey': this.apiKey });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(private loadingC: LoadingController) { }\n\n  public async createLoadingMsg(msg:string){\n    const loading = await this.loadingC.create({\n      message: msg,\n      spinner: 'dots',\n      mode: 'ios',\n      translucent: true\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  public async createLoading(){\n    const loading = await this.loadingC.create({\n      spinner: 'dots',\n      mode: 'ios',\n      translucent: true\n    });\n\n    await loading.present();\n  }\n\n  public cancelLoading(){\n    this.loadingC.dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toast: ToastController) { }\n\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: \"top\",\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'bottom',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'middle',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n}\n"]}