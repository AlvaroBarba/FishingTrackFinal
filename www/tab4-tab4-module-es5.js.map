{"version":3,"sources":["webpack:///src/app/tab4/tab4.page.html","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/tab4/tab4-routing.module.ts","webpack:///src/app/tab4/tab4.module.ts","webpack:///src/app/tab4/tab4.page.scss","webpack:///src/app/tab4/tab4.page.ts"],"names":["HttpService","http","ip","apiKey","username","pass","url","post","get","id","password","photo","idUser1","idUser2","status","idUser","title","coordinates","level","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","providedIn","ToastService","toast","msg","animation","time","color","create","message","animated","duration","position","mode","cToast","present","routes","path","component","Tab4PageRoutingModule","imports","forChild","exports","Tab4PageModule","declarations","Tab4Page","authS","router","camera","croppedImagepath","isLoading","imagePickerOptions","maximumImagesCount","quality","usuario","getUser","avatar","getCountRoutes","nRoutes","then","data","dat","JSON","parse","result","forEach","element","rutas","err","logout","isLogged","navigate","undefined","myphoto","addAvatar","createToastBottom","options","destinationType","DestinationType","DATA_URL","sourceType","PictureSourceType","PHOTOLIBRARY","saveToPhotoAlbum","getPicture","imageData","newAvatar","console","log","addPhoto","newPhoto","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMFA,WAAW;AAKtB,6BAAoBC,IAApB,EAAgC;AAAA;;AAAZ,eAAAA,IAAA,GAAAA,IAAA;AAHb,eAAAC,EAAA,GAAK,oDAAL;AACP,eAAAC,MAAA,GAAS,kBAAT;AAEmC,SALb,CAOtB;;;AAPsB;AAAA;AAAA,kCASPC,QATO,EASWC,IATX,EASuB;AAC3C,gBAAIC,GAAG,GAAG,KAAKJ,EAAL,GAAU,OAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYF,QAAd;AAAwB,0BAAYC;AAApC,aAApB,EAAgE;AAAE,wBAAU,KAAKF;AAAjB,aAAhE,CAAP;AACD;AAZqB;AAAA;AAAA,4CAcGC,QAdH,EAcmB;AACvC,gBAAIE,GAAG,GAAG,KAAKJ,EAAL,GAAU,QAAV,GAAqBE,QAA/B;AACA,mBAAO,KAAKH,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKH;AAAjB,aAAvB,CAAP;AACD;AAjBqB;AAAA;AAAA,qCAmBJM,EAnBI,EAmBG;AACvB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,UAAV,GAAuBO,EAAjC;AACA,mBAAO,KAAKR,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKH;AAAjB,aAAvB,CAAP;AACD;AAtBqB;AAAA;AAAA,2CAwBEM,EAxBF,EAwBS;AAC7B,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,wBAAV,GAAqCO,EAA/C;AACA,mBAAO,KAAKR,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKH;AAAjB,aAAvB,CAAP;AACD;AA3BqB;AAAA;AAAA,oCA6BLM,EA7BK,EA6BE;AACtB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,SAAV,GAAsBO,EAAhC;AACA,mBAAO,KAAKR,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKH;AAAjB,aAAvB,CAAP;AACD;AAhCqB;AAAA;AAAA,yCAkCAM,EAlCA,EAkCO;AAC3B,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,UAAV,GAAuBO,EAAjC;AACA,mBAAO,KAAKR,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKH;AAAjB,aAAvB,CAAP;AACD;AArCqB;AAAA;AAAA,oCAuCLM,EAvCK,EAuCE;AACtB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,SAAV,GAAsBO,EAAhC;AACA,mBAAO,KAAKR,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKH;AAAjB,aAAvB,CAAP;AACD;AA1CqB;AAAA;AAAA,kCA4CPM,EA5CO,EA4CA;AACpB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKD,IAAL,CAAUO,GAAV,CAAcF,GAAd,EAAmB;AAAE,0BAAYG;AAAd,aAAnB,EAAuC;AAAE,wBAAU,KAAKN;AAAjB,aAAvC,CAAP;AACD,WA/CqB,CAiDtB;;AAjDsB;AAAA;AAAA,kCAmDPC,QAnDO,EAmDWM,QAnDX,EAmD2B;AAC/C,gBAAIJ,GAAG,GAAG,KAAKJ,EAAL,GAAU,gBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYF,QAAd;AAAwB,0BAAYM;AAApC,aAApB,EAAoE;AAAE,wBAAU,KAAKP;AAAjB,aAApE,CAAP;AACD;AAtDqB;AAAA;AAAA,oCAwDLQ,KAxDK,EAwDUF,EAxDV,EAwDgB;AACpC,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,cAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAC,wBAAUK,KAAX;AAAkB,oBAAKF;AAAvB,aAApB,EAAgD;AAAE,wBAAU,KAAKN;AAAjB,aAAhD,CAAP;AACD;AA3DqB;AAAA;AAAA,2CA6DES,OA7DF,EA6DgBC,OA7DhB,EA6D8BC,MA7D9B,EA6D4C;AAChE,gBAAIR,GAAG,GAAG,KAAKJ,EAAL,GAAU,uBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,yBAAWM,OAAb;AAAsB,yBAAWC,OAAjC;AAA0C,8BAAgBC;AAA1D,aAApB,EAAwF;AAAE,wBAAU,KAAKX;AAAjB,aAAxF,CAAP;AACD;AAhEqB;AAAA;AAAA,mCAkENY,MAlEM,EAkEOC,KAlEP,EAkEsBC,WAlEtB,EAkEwCC,KAlExC,EAkEiD;AACrE,gBAAIZ,GAAG,GAAG,KAAKJ,EAAL,GAAU,YAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,wBAAUS,MAAZ;AAAoB,uBAASC,KAA7B;AAAoC,6BAAeC,WAAnD;AAAgE,uBAASC;AAAzE,aAApB,EAAsG;AAAE,wBAAU,KAAKf;AAAjB,aAAtG,CAAP;AACD;AArEqB;AAAA;AAAA,mCAuENY,MAvEM,EAuEOC,KAvEP,EAuEsBG,WAvEtB,EAuEwCC,KAvExC,EAuEkD;AACtE,gBAAId,GAAG,GAAG,KAAKJ,EAAL,GAAU,YAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,wBAAUS,MAAZ;AAAoB,uBAASC,KAA7B;AAAoC,6BAAeG,WAAnD;AAAgE,qBAAOC;AAAvE,aAApB,EAAoG;AAAE,wBAAU,KAAKjB;AAAjB,aAApG,CAAP;AACD;AA1EqB;AAAA;AAAA,0CA4ECkB,OA5ED,EA4EeC,OA5Ef,EA4E2B;AAC/C,gBAAIhB,GAAG,GAAG,KAAKJ,EAAL,GAAU,iBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,yBAAWe,OAAb;AAAsB,yBAAWC;AAAjC,aAApB,EAAgE;AAAE,wBAAU,KAAKnB;AAAjB,aAAhE,CAAP;AACD;AA/EqB;AAAA;AAAA,kCAiFPkB,OAjFO,EAiFON,MAjFP,EAiFkB;AACtC,gBAAIT,GAAG,GAAG,KAAKJ,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYe,OAAd;AAAuB,yBAAWN;AAAlC,aAApB,EAAgE;AAAE,wBAAU,KAAKZ;AAAjB,aAAhE,CAAP;AACD,WApFqB,CAuFtB;;AAvFsB;AAAA;AAAA,qCAyFJO,QAzFI,EAyFcN,QAzFd,EAyF8B;AAClD,gBAAIE,GAAG,GAAG,KAAKJ,EAAL,GAAU,sBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUsB,GAAV,CAAcjB,GAAd,EAAmB;AAAE,0BAAYI,QAAd;AAAwB,0BAAYN;AAApC,aAAnB,EAAmE;AAAE,wBAAU,KAAKD;AAAjB,aAAnE,CAAP;AACD;AA5FqB;AAAA;AAAA,uCA8FFM,EA9FE,EA8FOK,MA9FP,EA8FuBU,GA9FvB,EA8F+B;AACnD,gBAAIlB,GAAG,GAAG,KAAKJ,EAAL,GAAU,sBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUsB,GAAV,CAAcjB,GAAd,EAAmB;AAAE,oBAAMG,EAAR;AAAY,8BAAgBK,MAA5B;AAAoC,qBAAOU;AAA3C,aAAnB,EAAqE;AAAE,wBAAU,KAAKrB;AAAjB,aAArE,CAAP;AACD;AAjGqB;AAAA;AAAA,sCAmGHM,EAnGG,EAmGMO,KAnGN,EAmGmB;AACvC,gBAAIV,GAAG,GAAG,KAAKJ,EAAL,GAAU,eAApB;AACA,mBAAO,KAAKD,IAAL,CAAUsB,GAAV,CAAcjB,GAAd,EAAmB;AAAE,oBAAMG,EAAR;AAAY,uBAASO;AAArB,aAAnB,EAAiD;AAAE,wBAAU,KAAKb;AAAjB,aAAjD,CAAP;AACD;AAtGqB;AAAA;AAAA,sCAwGHM,EAxGG,EAwGMO,KAxGN,EAwGqBG,WAxGrB,EAwGwC;AAC5D,gBAAIb,GAAG,GAAG,KAAKJ,EAAL,GAAU,eAApB;AACA,mBAAO,KAAKD,IAAL,CAAUsB,GAAV,CAAcjB,GAAd,EAAmB;AAAE,oBAAMG,EAAR;AAAY,uBAASO,KAArB;AAA4B,6BAAeG;AAA3C,aAAnB,EAA6E;AAAE,wBAAU,KAAKhB;AAAjB,aAA7E,CAAP;AACD,WA3GqB,CA6GtB;;AA7GsB;AAAA;AAAA,qCA+GJM,EA/GI,EA+GG;AACvB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,uBAAV,GAAoCO,EAA9C;AACA,mBAAO,KAAKR,IAAL,WAAiBK,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKH;AAAjB,aAA1B,CAAP;AACD;AAlHqB;AAAA;AAAA,uCAoHFM,EApHE,EAoHOgB,QApHP,EAoHoB;AACxC,gBAAInB,GAAG,GAAG,KAAKJ,EAAL,GAAU,QAAV,GAAqBO,EAArB,GAA0B,UAA1B,GAAuCgB,QAAjD;AACA,mBAAO,KAAKxB,IAAL,WAAiBK,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKH;AAAjB,aAA1B,CAAP;AACD;AAvHqB;AAAA;AAAA,sCAyHHM,EAzHG,EAyHI;AACxB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,gBAAV,GAA6BO,EAAvC;AACA,mBAAO,KAAKR,IAAL,WAAiBK,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKH;AAAjB,aAA1B,CAAP;AACD;AA5HqB;AAAA;AAAA,sCA8HHM,EA9HG,EA8HI;AACxB,gBAAIH,GAAG,GAAG,KAAKJ,EAAL,GAAU,gBAAV,GAA6BO,EAAvC;AACA,mBAAO,KAAKR,IAAL,WAAiBK,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKH;AAAjB,aAA1B,CAAP;AACD;AAjIqB;AAAA;AAAA,qCAmIJuB,QAnII,EAmIWC,OAnIX,EAmIuB;AAC3C,gBAAIrB,GAAG,GAAG,KAAKJ,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKD,IAAL,WAAiBK,GAAjB,EAAsB;AAAE,0BAAYoB,QAAd;AAAwB,yBAAWC;AAAnC,aAAtB,EAAoE;AAAE,wBAAU,KAAKxB;AAAjB,aAApE,CAAP;AACD;AAtIqB;;AAAA;AAAA,S;;;;gBALf;;;;AAKIH,iBAAW,6DAHvB,iEAAW;AACV4B,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAX5B,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAA6B,YAAY;AAEvB,8BAAoBC,KAApB,EAA4C;AAAA;;AAAxB,eAAAA,KAAA,GAAAA,KAAA;AAA2B;;AAFxB;AAAA;AAAA,yCAIKC,GAJL,EAIiBC,SAJjB,EAIoCC,IAJpC,EAIiDC,KAJjD,EAI6D;;;;;;;;AACrE,6BAAM,KAAKJ,KAAL,CAAWK,MAAX,CAAkB;AACnCC,+BAAO,EAAEL,GAD0B;AAEnCM,gCAAQ,EAAEL,SAFyB;AAGnCM,gCAAQ,EAAEL,IAHyB;AAInCM,gCAAQ,EAAE,KAJyB;AAKnCL,6BAAK,EAAEA,KAL4B;AAMnCM,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATC,4B;;AAQJ,6BAAMA,MAAM,CAACC,OAAP,EAAN;;;;;;;;;AACD;AAdsB;AAAA;AAAA,4CAgBQX,GAhBR,EAgBoBC,SAhBpB,EAgBuCC,IAhBvC,EAgBoDC,KAhBpD,EAgBgE;;;;;;;;AACxE,6BAAM,KAAKJ,KAAL,CAAWK,MAAX,CAAkB;AACnCC,+BAAO,EAAEL,GAD0B;AAEnCM,gCAAQ,EAAEL,SAFyB;AAGnCM,gCAAQ,EAAEL,IAHyB;AAInCM,gCAAQ,EAAE,QAJyB;AAKnCL,6BAAK,EAAEA,KAL4B;AAMnCM,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATC,4B;;AAQJ,6BAAMA,MAAM,CAACC,OAAP,EAAN;;;;;;;;;AACD;AA1BsB;AAAA;AAAA,4CA4BQX,GA5BR,EA4BoBC,SA5BpB,EA4BuCC,IA5BvC,EA4BoDC,KA5BpD,EA4BgE;;;;;;;;AACxE,6BAAM,KAAKJ,KAAL,CAAWK,MAAX,CAAkB;AACnCC,+BAAO,EAAEL,GAD0B;AAEnCM,gCAAQ,EAAEL,SAFyB;AAGnCM,gCAAQ,EAAEL,IAHyB;AAInCM,gCAAQ,EAAE,QAJyB;AAKnCL,6BAAK,EAAEA,KAL4B;AAMnCM,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATC,4B;;AAQJ,6BAAMA,MAAM,CAACC,OAAP,EAAN;;;;;;;;;AACD;AAtCsB;;AAAA;AAAA,S;;;;gBALhB;;;;AAKIb,kBAAY,6DAHxB,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAGwB,GAAZC,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,UAAMc,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DAJjC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAT1B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,0EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,mDAAD;AAPN,OAAT,CAS0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFE,QAAQ;AAcnB,0BACUtB,KADV,EAEUuB,KAFV,EAGUC,MAHV,EAIUC,MAJV,EAKUtD,IALV,EAK6B;AAAA;;AAJnB,eAAA6B,KAAA,GAAAA,KAAA;AACA,eAAAuB,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAtD,IAAA,GAAAA,IAAA;AAbV,eAAAuD,gBAAA,GAAmB,EAAnB;AACA,eAAAC,SAAA,GAAY,KAAZ;AAEA,eAAAC,kBAAA,GAAqB;AACnBC,8BAAkB,EAAE,CADD;AAEnBC,mBAAO,EAAE;AAFU,WAArB;AAWE,eAAKC,OAAL,GAAeR,KAAK,CAACS,OAAN,EAAf;AACD;;AArBkB;AAAA;AAAA,qCAuBR;AACT,iBAAKC,MAAL;AACA,iBAAKC,cAAL;AACD;AA1BkB;AAAA;AAAA,2CA4BK;AAAA;;AACtB,iBAAKC,OAAL,GAAe,CAAf;AACA,iBAAKhE,IAAL,CAAU+D,cAAV,CAAyB,KAAKH,OAAL,CAAapD,EAAtC,EAA0CyD,IAA1C,CAA+C,UAACC,IAAD,EAAU;AACvD,kBAAIA,IAAJ,EAAU;AACR,oBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACA,IAAhB,CAAV;;AACA,oBAAIC,GAAG,CAACtD,MAAJ,IAAc,GAAlB,EAAuB;AACrBsD,qBAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC5B,yBAAI,CAACR,OAAL,GAAeQ,OAAO,CAACC,KAAvB;AACD,mBAFD;AAGD;AACF;AACF,aATD,WASS,UAACC,GAAD,EAAS,CAAG,CATrB;AAUD;AAxCkB;AAAA;AAAA,mCA0CG;;;;;;;AACpB,6BAAM,KAAKtB,KAAL,CAAWuB,MAAX,EAAN;;;AACA,0BAAI,CAAC,KAAKvB,KAAL,CAAWwB,QAAX,EAAL,EAA4B;AAC1B,6BAAKvB,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;;;;;;;AACF;AA/CkB;AAAA;AAAA,mCAiDH;AACd,gBAAI,KAAKjB,OAAL,CAAaE,MAAb,IAAuBgB,SAAvB,IAAoC,KAAKlB,OAAL,CAAaE,MAAb,IAAuB,EAA/D,EAAmE;AACjE,mBAAKiB,OAAL,GAAe,yBAAf;AACD,aAFD,MAEO;AACL,mBAAKA,OAAL,GAAe,KAAKnB,OAAL,CAAaE,MAA5B;AACD;AACF;AAvDkB;AAAA;AAAA,oCAyDFpD,KAzDE,EAyDK;AAAA;;AACtB,iBAAKV,IAAL,CAAUgF,SAAV,CAAoBtE,KAApB,EAA2B,KAAKkD,OAAL,CAAapD,EAAxC,EAA4CyD,IAA5C,CAAiD,UAACC,IAAD,EAAU;AACzD,kBAAIA,IAAJ,EAAU;AACR,oBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACA,IAAhB,CAAV;;AACA,oBAAIC,GAAG,CAACtD,MAAJ,IAAc,GAAlB,EAAuB;AACrB,wBAAI,CAACgB,KAAL,CAAWoD,iBAAX,CAA6B,2BAA7B,EAA0D,IAA1D,EAAgE,GAAhE,EAAqE,SAArE;AACD;AACF;AACF,aAPD;AAQD;AAlEkB;AAAA;AAAA,qCAoEX;AAAA;;AACN,gBAAMC,OAAO,GAAkB;AAC7BvB,qBAAO,EAAE,EADoB;AAE7BwB,6BAAe,EAAE,KAAK7B,MAAL,CAAY8B,eAAZ,CAA4BC,QAFhB;AAG7BC,wBAAU,EAAE,KAAKhC,MAAL,CAAYiC,iBAAZ,CAA8BC,YAHb;AAI7BC,8BAAgB,EAAE;AAJW,aAA/B;AAMA,mBAAO,KAAKnC,MAAL,CAAYoC,UAAZ,CAAuBR,OAAvB,EAAgCjB,IAAhC,CAAqC,UAAC0B,SAAD,EAAe;AACzD,oBAAI,CAACZ,OAAL,GAAe,4BAA4BY,SAA3C;;AACA,oBAAI,CAACC,SAAL,CAAe,MAAI,CAACb,OAApB;AACD,aAHM,EAGJ,UAACL,GAAD,EAAS;AACVmB,qBAAO,CAACC,GAAR,CAAYpB,GAAZ;AACD,aALM,CAAP;AAMD;AAjFkB;AAAA;AAAA,mCAmFHhE,KAnFG,EAmFI;AAAA;;AACrB,iBAAKV,IAAL,CAAU+F,QAAV,CAAmB,KAAKnC,OAAL,CAAapD,EAAhC,EAAoC,QAApC,EAA8C,QAA9C,EAAwDE,KAAxD,EAA+DuD,IAA/D,CAAoE,UAACC,IAAD,EAAU;AAC5E,kBAAIA,IAAJ,EAAU;AACR,oBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACA,IAAhB,CAAV;;AACA,oBAAIC,GAAG,CAACtD,MAAJ,IAAc,GAAlB,EAAuB;AACrB,wBAAI,CAACgB,KAAL,CAAWoD,iBAAX,CAA6B,2BAA7B,EAA0D,IAA1D,EAAgE,GAAhE,EAAqE,SAArE;AACD;AACF;AACF,aAPD;AAQD;AA5FkB;AAAA;AAAA,yCA8FP;AAAA;;AACV,gBAAMC,OAAO,GAAkB;AAC7BvB,qBAAO,EAAE,EADoB;AAE7BwB,6BAAe,EAAE,KAAK7B,MAAL,CAAY8B,eAAZ,CAA4BC,QAFhB;AAG7BC,wBAAU,EAAE,KAAKhC,MAAL,CAAYiC,iBAAZ,CAA8BC,YAHb;AAI7BC,8BAAgB,EAAE;AAJW,aAA/B;AAMA,mBAAO,KAAKnC,MAAL,CAAYoC,UAAZ,CAAuBR,OAAvB,EAAgCjB,IAAhC,CAAqC,UAAC0B,SAAD,EAAe;AACzD,oBAAI,CAACZ,OAAL,GAAe,4BAA4BY,SAA3C;;AACA,oBAAI,CAACK,QAAL,CAAc,MAAI,CAACjB,OAAnB;AACD,aAHM,EAGJ,UAACL,GAAD,EAAS;AACVmB,qBAAO,CAACC,GAAR,CAAYpB,GAAZ;AACD,aALM,CAAP;AAMD;AA3GkB;;AAAA;AAAA,S;;;;gBARZ;;gBAHA;;gBAFA;;gBAGA;;gBACA;;;;AASIvB,cAAQ,6DALpB,gEAAU;AACT8C,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0FAFS;;;;AAAA,OAAV,CAKoB,GAAR/C,QAAQ,CAAR","file":"tab4-tab4-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button menu=\\\"menu-main\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n    <ion-button (click)=\\\"this.logout()\\\"><ion-icon name=\\\"log-out-outline\\\"></ion-icon></ion-button>\\n  </ion-buttons>\\n    \\n    <ion-title class=\\\"textColor\\\">\\n      Perfil\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-card color=\\\"light\\\">\\n      <div class=\\\"img-wrapper\\\">\\n        <ion-avatar slot=\\\"start\\\" (click)=\\\"this.getImage()\\\">\\n          <img src=\\\"{{this.myphoto}}\\\">\\n        </ion-avatar>\\n      </div>\\n    <ion-card-content class=\\\"ion-text-center\\\">\\n      <h2 style=\\\"margin-top: 5%;\\\" class=\\\"textColor\\\">{{this.usuario.username}}</h2>\\n      <ion-text color=\\\"medium\\\">\\n      </ion-text>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-list>\\n    <ion-item>\\n      <ion-icon slot=\\\"end\\\" name=\\\"chevron-forward-sharp\\\"></ion-icon>\\n      <ion-label>Fotos</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"end\\\" name=\\\"chevron-forward-sharp\\\"></ion-icon>\\n      <ion-label>Rutas</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"end\\\" name=\\\"chevron-forward-sharp\\\"></ion-icon>\\n      <ion-label>Todo</ion-label>\\n    </ion-item>\\n  </ion-list>\";","import { Injectable } from '@angular/core';\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\n  apiKey = \"HS$TF{nasiRYDk@#\";\n\n  constructor(private http: HTTP) { }\n\n  //GET methods\n\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user';\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\n  }\n\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + username;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriends(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/friend/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getCountRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/routes/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getPhotos(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getLike(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\n  }\n\n  //POST methods\n\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/register';\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\n  }\n\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/avatar';\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\n  }\n\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request';\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\n  }\n\n  public addRoute(idUser: any, title: string, coordinates: any, level:any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates, 'level': level }, { 'apikey': this.apiKey });\n  }\n\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\n  }\n\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/newPhoto';\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\n  }\n\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\n  }\n\n\n  //PUT methods\n\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/profile/update';\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\n  }\n\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/update';\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\n  }\n\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\n    let url = this.ip + '/route/update';\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\n  }\n\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/update';\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\n  }\n\n  //DELETE methods\n\n  public deleteUser(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/remove/account/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteRoute(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deletePhoto(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toast: ToastController) { }\n\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: \"top\",\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'bottom',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'middle',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Tab4Page } from './tab4.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab4Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Tab4PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab4PageRoutingModule } from './tab4-routing.module';\n\nimport { Tab4Page } from './tab4.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Tab4PageRoutingModule\n  ],\n  declarations: [Tab4Page]\n})\nexport class Tab4PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjQvdGFiNC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../model/User';\nimport { AuthService } from '../services/auth.service';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { HttpService } from '../services/http.service';\nimport { ToastService } from '../services/toast.service';\n\n\n@Component({\n  selector: 'app-tab4',\n  templateUrl: './tab4.page.html',\n  styleUrls: ['./tab4.page.scss'],\n})\nexport class Tab4Page implements OnInit {\n\n  usuario: User;\n  nRoutes: number;\n  myphoto: any;\n\n  croppedImagepath = \"\";\n  isLoading = false;\n\n  imagePickerOptions = {\n    maximumImagesCount: 1,\n    quality: 50\n  };\n\n  constructor(\n    private toast: ToastService,\n    private authS: AuthService,\n    private router: Router,\n    private camera: Camera,\n    private http: HttpService) {\n    this.usuario = authS.getUser();\n  }\n\n  ngOnInit() {\n    this.avatar();\n    this.getCountRoutes();\n  }\n\n  public getCountRoutes() {\n    this.nRoutes = 0;\n    this.http.getCountRoutes(this.usuario.id).then((data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          dat.result.forEach(element => {\n            this.nRoutes = element.rutas\n          });\n        }\n      }\n    }).catch((err) => { });\n  }\n\n  public async logout() {\n    await this.authS.logout();\n    if (!this.authS.isLogged()) {\n      this.router.navigate(['/welcome'])\n    }\n  }\n\n  public avatar() {\n    if (this.usuario.avatar == undefined || this.usuario.avatar == \"\") {\n      this.myphoto = \"assets/icon/usuario.svg\";\n    } else {\n      this.myphoto = this.usuario.avatar;\n    }\n  }\n\n  public newAvatar(photo) {\n    this.http.addAvatar(photo, this.usuario.id).then((data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status != \"0\") {\n          this.toast.createToastBottom(\"Error cambiando el avatar\", true, 400, \"warning\");\n        }\n      }\n    })\n  }\n\n  getImage(): Promise<void> {\n    const options: CameraOptions = {\n      quality: 10,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n      saveToPhotoAlbum: false\n    }\n    return this.camera.getPicture(options).then((imageData) => {\n      this.myphoto = 'data:image/jpeg;base64,' + imageData;\n      this.newAvatar(this.myphoto);\n    }, (err) => {\n      console.log(err)\n    });\n  }\n\n  public newPhoto(photo) {\n    this.http.addPhoto(this.usuario.id, \"titulo\", \"prueba\", photo).then((data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status != \"0\") {\n          this.toast.createToastBottom(\"Error subiendo la foto...\", true, 400, \"warning\");\n        }\n      }\n    })\n  }\n\n  insertImagen(): Promise<void> {\n    const options: CameraOptions = {\n      quality: 10,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n      saveToPhotoAlbum: false\n    }\n    return this.camera.getPicture(options).then((imageData) => {\n      this.myphoto = 'data:image/jpeg;base64,' + imageData;\n      this.newPhoto(this.myphoto);\n    }, (err) => {\n      console.log(err)\n    });\n  }\n\n}\n"]}