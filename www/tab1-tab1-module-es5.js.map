{"version":3,"sources":["webpack:///src/app/components/mapa/mapa.component.html","webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/components/mapa/mapa.component.scss","webpack:///src/app/components/mapa/mapa.component.ts","webpack:///src/app/tab1/tab1-routing.module.ts","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["MapaComponent","created","createMap","console","log","line","miMapa","setView","coordinates","getCenter","attribution","addTo","setTimeout","invalidateSize","selector","template","routes","path","component","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","Tab1Page","router","popover","http","authS","camera","paraTi","fotos","rutas","friends","friendsRoutes","mapas","you","getUser","getFriends","getOwnRoutes","id","getRoutes","then","data","dat","JSON","parse","status","result","forEach","element","route","title","username","avatar","push","error","err","aux","getFriendsRoutes","length","friend","ev","createPopover"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<ion-card>\\n  <ion-card-header>\\n    <ion-card-title>{{this.title}}</ion-card-title>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <div id=\\\"miMapa\\\" style=\\\"height: fit-content; width: fit-content;\\\">\\n      content\\n    </div>\\n  </ion-card-content>\\n</ion-card>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"showPopover($event)\\\">\\n        <ion-icon name=\\\"ellipsis-vertical\\\" class=\\\"iconos\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"textColor\\\">\\n      NOVEDADES\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-segment value=\\\"all\\\">\\n      <ion-segment-button value=\\\"parati\\\" class=\\\"background-button-toolbar1\\\" (click)='this.pestanaParaTi()'>\\n        PARA TI\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"fotos\\\" class=\\\"background-button-toolbar\\\" (click)='this.pestanaFotos()'>\\n        FOTOS\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"rutas\\\" class=\\\"background-button-toolbar\\\" (click)='this.pestanaRutas()'>\\n        RUTAS\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\" *ngIf='this.paraTi'>\\n  <ion-list *ngFor=\\\"let Route of this.friendsRoutes; let i=index;\\\">\\n    <ion-item>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>\\n            {{Route.title}}\\n          </ion-card-title>\\n        </ion-card-header>\\n      </ion-card>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-content [fullscreen]=\\\"true\\\" *ngIf='this.fotos'>\\n  <ion-card>\\n        <img src=\\\"{{this.myphoto}}\\\" />\\n        <ion-card-header>\\n          <ion-card-title>Título de la ruta</ion-card-title>\\n          <ion-card-subtitle>{{this.you.username}}</ion-card-subtitle>\\n        </ion-card-header>\\n      </ion-card>\\n</ion-content>\\n\\n<ion-content [fullscreen]=\\\"true\\\" *ngIf='this.rutas'>\\n  <ion-list *ngFor=\\\"let Route of this.routes; let i=index;\\\">\\n    <ion-item>\\n        <app-mapa line=\\\"{{line}}\\\" title=\\\"this.title\\\"></app-mapa>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n</ion-header>\\n\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFwYS9tYXBhLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport { geoJSON, Map, tileLayer } from 'leaflet';\n\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.scss'],\n})\nexport class MapaComponent implements OnInit {\n\n  created = false;\n  miMapa:Map;\n  @Input() line: any\n  title:string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.createMap();\n  }\n\n  public createMap() {\n    console.log(\"la linea -> \" + this.line);\n    this.created = true;\n    this.miMapa = new Map(\"miMapa\").setView(this.line.coordinates.getCenter(), 20);\n    tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      { attribution: 'Map data © <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>' })\n      .addTo(this.miMapa);\n    setTimeout(() => {\n      this.miMapa.invalidateSize();\n    }, 400);\n    geoJSON(this.line).addTo(this.miMapa);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\nimport { MapaComponent } from '../components/mapa/mapa.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page, MapaComponent]\n})\nexport class Tab1PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\";","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Map, Polyline, tileLayer } from 'leaflet';\nimport { User } from '../model/User';\nimport { AuthService } from '../services/auth.service';\nimport { HttpService } from '../services/http.service';\nimport { PopoverService } from '../services/popover.service';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { title } from 'process';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  private paraTi = true;\n  private fotos = false;\n  private rutas = false;\n  private friends:User[]=[];\n  public routes=[];\n  public friendsRoutes=[];\n  private you:User;\n  public mapas:Map[]=[];\n  line:any;\n\n  constructor(private router:Router,\n     private popover:PopoverService,\n     private http:HttpService,\n     private authS:AuthService,\n     private camera:Camera) {\n       this.you = this.authS.getUser();\n     }\n\n  \n  public pestanaParaTi(){\n    if(!this.paraTi){\n      this.rutas = false;\n      this.fotos = false;\n      this.paraTi = true;\n      this.getFriends();\n    }\n  }\n\n  public pestanaFotos(){\n    if(!this.fotos){\n      this.rutas = false;\n      this.paraTi = false;\n      this.fotos = true;\n    }\n  }\n\n  public pestanaRutas(){\n    if(!this.rutas){\n      this.paraTi = false;\n      this.fotos = false;\n      this.rutas = true;\n      if(this.routes == null){\n        this.getOwnRoutes();\n      }\n    }\n  }\n\n  public getOwnRoutes(){\n    this.routes = [];\n    this.mapas = [];\n    this.line = null;\n    if(this.you.id != -1){\n      this.http.getRoutes(this.you.id).then((data)=>{\n        if(data){\n          let dat = JSON.parse(data.data);\n          if(dat.status == \"0\"){\n            //todo ok\n            dat.result.forEach(element => {\n              let route = {\n                title:element.title,\n                username:this.you.username,\n                avatar:this.you.avatar,\n                coordinates:element.coordinates\n              }\n              this.routes.push(route);\n            });\n          }else{\n            //toast\n            console.error(\"toast\");\n          }\n        }\n      }).catch((err)=>{\n        console.error(err);\n      });\n    }\n  }\n\n  public getFriends(){\n    this.friends = [];\n    this.http.getFriends(this.you.id).then((data)=>{\n      if(data){\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          //Todo ok\n          dat.result.forEach(element => {\n            let aux = {\n              id:element.id,\n              username:element.username,\n              avatar:element.avatar\n            }\n            console.error(\"FRIENDS --> \" + aux.username);\n            this.friends.push(aux);\n            this.getFriendsRoutes();\n          });\n        }\n      }\n    }).catch((err)=>{\n      console.error(\"Error en getFriends -> \" +err);\n    });\n  }\n\n  public getFriendsRoutes(){\n    console.error(\"FRIENDSROUTES\");\n    if(this.friends.length > 0){\n      console.error(\"FRIENDSROUTES 1if\");\n      this.friends.forEach((friend)=>{\n        console.error(\"FRIENDSROUTES FOR\");\n        this.http.getRoutes(friend.id).then((data)=>{\n          console.error(\"FRIENDSROUTES HTTP\");\n          if(data){\n            console.error(\"FRIENDSROUTES DATA\");\n            let dat = JSON.parse(data.data);\n            if(dat.status == \"0\"){\n              //todo ok\n              console.error(\"FRIENDSROUTES OK\");\n              let route = {\n                title:dat.result.title,\n                username:friend.username,\n                avatar:friend.avatar,\n                coordinates:dat.result.coordinates\n              }\n              console.error(\"FRIENDSROUTES \" + route.title);\n              this.friendsRoutes.push(route);\n            }else{\n              //toast\n            }\n          }\n        }).catch((err)=>{\n          //toast\n          console.error(\"ERROR OBTENIENDO RUTAS \" + err);\n        });\n      });\n    }\n  }\n\n\n  public async showPopover(ev){\n    this.popover.createPopover(ev);\n  }\n\n  \n\n}\n"]}