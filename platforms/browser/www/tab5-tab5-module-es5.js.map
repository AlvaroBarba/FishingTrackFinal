{"version":3,"sources":["webpack:///src/app/tab5/tab5.page.html","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/tab5/tab5-routing.module.ts","webpack:///src/app/tab5/tab5.module.ts","webpack:///src/app/tab5/tab5.page.scss","webpack:///src/app/tab5/tab5.page.ts"],"names":["HttpService","http","ip","apiKey","username","pass","url","post","get","id","password","photo","idUser1","idUser2","status","idUser","title","coordinates","level","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","providedIn","ToastService","toast","msg","animation","time","color","create","message","animated","duration","position","mode","cToast","present","routes","path","component","Tab5PageRoutingModule","imports","forChild","exports","Tab5PageModule","declarations","Tab5Page","authS","searchB","searchBar","users","friendReq","friendList","search","list","requests","yourFriends","you","getUser","getFriends","friendRequest","then","data","dat","JSON","parse","result","forEach","element","avatar","undefined","push","err","createToastBottom","updateFriend","createToastMiddle","deleteFriend","evt","val","target","value","aux","trim","getUserByUsername","isFriend","u2","user1","addFriendRequest","indexOf","user","getFriendRequest","selector","template"],"mappings":"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","file":"tab5-tab5-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"this.searchB\\\">\\n      <ion-button (click)=\\\"this.showSearch()\\\">\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"textColor\\\">\\n      Amigos\\n    </ion-title>\\n  </ion-toolbar>\\n  \\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-segment value=\\\"all\\\">\\n      <ion-segment-button value=\\\"buscar\\\" class=\\\"background-button-toolbar\\\" (click)='this.goSearch()' class=\\\"background-button-toolbar1\\\">\\n        Busca\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"peticiones\\\" class=\\\"background-button-toolbar\\\" (click)='this.goRequest()' class=\\\"background-button-toolbar\\\">\\n        Peticiones\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"lista\\\" class=\\\"background-button-toolbar\\\" (click)='this.goList()' class=\\\"background-button-toolbar\\\">\\n        Lista\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.search\\\">\\n  <ion-searchbar placeholder=\\\"Buscar\\\" (ionChange)=\\\"this.searchFriend($event)\\\" *ngIf=\\\"searchBar\\\"\\n  (ionBlur)=\\\"this.closeSearch()\\\"> </ion-searchbar>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let User of this.users; let i=index\\\">\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button *ngIf=\\\"!this.User.isFriend\\\" (click)=\\\"this.sendFriendRequest(User)\\\">\\n          <ion-icon name=\\\"person-add-sharp\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      <ion-avatar>\\n        <img src=\\\"{{User.avatar}}\\\">\\n      </ion-avatar>\\n      <ion-label>{{User.username}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.requests\\\">\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let User of this.friendReq; let i=index\\\">\\n      <ion-icon (click)=\\\"this.acceptFriend(User.id)\\\" slot=\\\"end\\\" src=\\\"assets/icon/accept.svg\\\"></ion-icon>\\n      <ion-icon (click)=\\\"this.rejectFriend(User.id)\\\" slot=\\\"end\\\" src=\\\"assets/icon/cancel.svg\\\"></ion-icon>\\n        <ion-avatar>\\n          <img src=\\\"{{User.avatar}}\\\">\\n        </ion-avatar>\\n        <ion-label>{{User.username}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n  <p *ngIf = \\\"this.friendReq.length == 0\\\" style=\\\"text-align: center;\\\">\\n    No tienes peticiones por ahora\\n    <ion-icon src=\\\"assets/icon/sad.svg\\\"></ion-icon>\\n  </p>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.list\\\">\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let User of this.friendList; let i=index\\\">\\n      <ion-icon (click)=\\\"this.deleteFriend(User.id)\\\" slot=\\\"end\\\" src=\\\"assets/icon/delete-friend.svg\\\"></ion-icon>\\n      <ion-avatar>\\n        <img src=\\\"{{User.avatar}}\\\">\\n      </ion-avatar>\\n      <ion-label>{{User.username}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\n  apiKey = \"HS$TF{nasiRYDk@#\";\n\n  constructor(private http: HTTP) { }\n\n  //GET methods\n\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user';\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\n  }\n\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + username;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriends(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/friend/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getCountRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/routes/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getPhotos(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getLike(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\n  }\n\n  //POST methods\n\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/register';\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\n  }\n\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/avatar';\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\n  }\n\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request';\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\n  }\n\n  public addRoute(idUser: any, title: string, coordinates: any, level:any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates, 'level': level }, { 'apikey': this.apiKey });\n  }\n\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\n  }\n\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/newPhoto';\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\n  }\n\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\n  }\n\n\n  //PUT methods\n\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/profile/update';\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\n  }\n\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/update';\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\n  }\n\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\n    let url = this.ip + '/route/update';\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\n  }\n\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/update';\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\n  }\n\n  //DELETE methods\n\n  public deleteUser(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/remove/account/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteRoute(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deletePhoto(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toast: ToastController) { }\n\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: \"top\",\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'bottom',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'middle',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Tab5Page } from './tab5.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab5Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Tab5PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab5PageRoutingModule } from './tab5-routing.module';\n\nimport { Tab5Page } from './tab5.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Tab5PageRoutingModule\n  ],\n  declarations: [Tab5Page]\n})\nexport class Tab5PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjUvdGFiNS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/User';\nimport { AuthService } from '../services/auth.service';\nimport { HttpService } from '../services/http.service';\nimport { LoadingService } from '../services/loading.service';\nimport { ToastService } from '../services/toast.service';\n\n@Component({\n  selector: 'app-tab5',\n  templateUrl: './tab5.page.html',\n  styleUrls: ['./tab5.page.scss'],\n})\nexport class Tab5Page implements OnInit {\n\n  searchB = false;\n  searchBar = false;\n  users: User[] = [];\n  friendReq: User[] = [];\n  friendList: User[] = [];\n  user: User;\n  search = false;\n  list = true;\n  requests = false;\n  you: User;\n  yourFriends = [];\n\n  constructor(\n    private http: HttpService,\n    private toast: ToastService,\n    private authS: AuthService) {\n    this.you = this.authS.getUser();\n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.getFriends();\n    this.friendRequest();\n  }\n\n  public goSearch() {\n    if (!this.search) {\n      this.list = false;\n      this.requests = false;\n      this.search = true;\n      this.searchB = true;\n    }\n  }\n\n  public goList() {\n    if (!this.list) {\n      this.search = false;\n      this.requests = false;\n      this.list = true;\n      this.getFriends();\n    }\n  }\n\n  public goRequest() {\n    if (!this.requests) {\n      this.list = false;\n      this.search = false;\n      this.requests = true;\n      this.friendRequest();\n    }\n  }\n\n  showSearch() {\n    this.searchBar = true;\n  }\n\n  closeSearch() {\n    this.searchBar = false;\n  }\n\n  public getFriends() {\n    this.friendList = [];\n    this.http.getFriends(this.you.id).then((data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          dat.result.forEach(element => {\n            if (element.avatar == undefined) {\n              element.avatar = \"assets/icon/usuario.svg\";\n            }\n            this.friendList.push(element);\n          });\n        }\n      }\n    }).catch((err) => {\n      this.toast.createToastBottom(\"Revise su conexión a internet...\", true, 400, \"warning\");\n    })\n  }\n\n  public acceptFriend(id) {\n    this.http.updateFriend(id, 2, this.you.id).then(async (data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          await this.friendRequest();\n          this.toast.createToastMiddle(\"Bien hora sois amigos!!\", true, 350, \"success\");\n        } else {\n          //Error\n        }\n      }\n    }).catch((err) => {\n      this.toast.createToastBottom(\"Revise su conexión a internet...\", true, 400, \"warning\");\n    })\n  }\n\n  public deleteFriend(id) {\n    this.http.deleteFriend(this.you.id, id).then(async (data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          await this.getFriends();\n          this.toast.createToastMiddle(\"Dejasteis de ser amigos\", true, 350, \"warning\");\n        } else {\n          //Error\n        }\n      }\n    }).catch((err) => {\n      this.toast.createToastBottom(\"Revise su conexión a internet...\", true, 400, \"warning\");\n    })\n  }\n\n  public rejectFriend(id) {\n    this.http.updateFriend(id, 3, this.you.id).then(async (data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          await this.friendRequest();\n          this.toast.createToastMiddle(\"Rechazaste la petición\", true, 350, \"warning\");\n        } else {\n          //Error\n        }\n      }\n    }).catch((err) => {\n      this.toast.createToastBottom(\"Revise su conexión a internet...\", true, 400, \"warning\");\n    })\n  }\n\n  public async searchFriend(evt: any) {\n    const val = evt.target.value;\n    this.users = [];\n    let aux: User[] = [];\n    if (val && val.trim() != '') {\n      this.http.getUserByUsername(val).then(async (data) => {\n        if (data) {\n          let dat = JSON.parse(data.data);\n          if (dat.status == \"0\") {\n            //Todo ok\n            dat.result.forEach(element => {\n              if (element.id != this.you.id) {\n                if (element.avatar == undefined) {\n                  element.avatar = \"assets/icon/usuario.svg\";\n                }\n                element.isFriend = false;\n                aux.push(element);\n              }\n            });\n\n            this.users = aux;\n            await this.isFriend();\n\n          }\n        } else {\n          //Error buscando usuario\n          await this.toast.createToastBottom(\"No hay coincidencias\", true, 400, \"danger\");\n        }\n\n      }).catch(async (err) => {\n        //Toast\n        await this.toast.createToastBottom(\"No hay coincidencias\", true, 400, \"danger\");\n      });\n    }\n  }\n\n  public sendFriendRequest(u2) {\n    let user1 = this.you;\n    this.http.addFriendRequest(user1.id, u2.id, 1).then(async (data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          await this.toast.createToastBottom(\"Petición enviada con éxito\", true, 300, \"success\");\n        }\n      }\n    }).catch(async (err) => {\n      await this.toast.createToastBottom(\"Error enviando petición pruebe más tarde\", true, 400, \"danger\");\n    })\n  }\n\n  public isFriend() {\n    this.users.forEach(element => {\n      this.friendList.forEach(data =>{\n        if(element.username == data.username){\n          this.users[this.users.indexOf(element)].isFriend = true;\n        }\n      })\n    });\n  }\n\n  public friendRequest() {\n    this.user = this.authS.getUser();\n    this.friendReq = [];\n    this.http.getFriendRequest(this.user.id).then(async (data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          //Todo ok\n          dat.result.forEach(element => {\n            if (element.avatar == undefined) {\n              element.avatar = \"assets/icon/usuario.svg\";\n            }\n            this.friendReq.push(element);\n          });\n        }\n      }\n    }).catch(async (err) => {\n      //Toast\n      await this.toast.createToastBottom(\"Fallo al cargar peticiones de amistad\", true, 400, \"danger\");\n    })\n  }\n}\n"]}