{"version":3,"sources":["webpack:///src/app/tab5/tab5.page.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/tab5/tab5-routing.module.ts","webpack:///src/app/tab5/tab5.module.ts","webpack:///src/app/tab5/tab5.page.scss","webpack:///src/app/tab5/tab5.page.ts"],"names":["AuthService","storage","router","user","id","username","password","avatar","setItem","navigate","route","isLogged","providedIn","HttpService","http","ip","apiKey","pass","url","post","get","photo","idUser1","idUser2","status","idUser","title","coordinates","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","LoadingService","loadingC","msg","create","message","spinner","mode","translucent","loading","present","onDidDismiss","role","data","dismiss","ToastService","toast","animation","time","color","animated","duration","position","cToast","routes","path","component","Tab5PageRoutingModule","imports","forChild","exports","Tab5PageModule","declarations","Tab5Page","toastS","authS","searchB","searchBar","users","friendReq","friendList","search","list","requests","you","getUser","getFriends","friendRequest","then","dat","JSON","parse","result","forEach","element","undefined","push","err","updateFriend","console","error","evt","val","target","value","trim","log","getUserByUsername","createToastBottom","getFriendRequest","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFA,WAAW;AAStB,6BAAoBC,OAApB,EACUC,MADV,EAC0B;AAAA;;AADN,eAAAD,OAAA,GAAAA,OAAA;AACV,eAAAC,MAAA,GAAAA,MAAA;AARH,eAAAC,IAAA,GAAO;AACZC,cAAE,EAAE,CAAC,CADO;AAEZC,oBAAQ,EAAE,EAFE;AAGZC,oBAAQ,EAAE,EAHE;AAIZC,kBAAM,EAAE;AAJI,WAAP;AASN;;AAXqB;AAAA;AAAA,mCAaA;;;;;;AACpB,2BAAKJ,IAAL,GAAY;AACVC,0BAAE,EAAE,CAAC,CADK;AAEVC,gCAAQ,EAAE,EAFA;AAGVC,gCAAQ,EAAE,EAHA;AAIVC,8BAAM,EAAE;AAJE,uBAAZ;;AAMA,6BAAM,KAAKN,OAAL,CAAaO,OAAb,CAAqB,MAArB,EAA6B,KAAKL,IAAlC,CAAN;;;AACA,2BAAKD,MAAL,CAAYO,QAAZ,CAAqB,CAAC,OAAD,CAArB;;;;;;;;;AACD;AAtBqB;AAAA;AAAA,gCAwBHN,IAxBG,EAwBS;;;;;;;AACjB,6BAAM,KAAKF,OAAL,CAAaO,OAAb,CAAqB,MAArB,EAA6BL,IAA7B,CAAN;;;AAAZ,2BAAKA,I;AACL,2BAAKD,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;;;;;;;;;AACD;AA3BqB;AAAA;AAAA,sCA6BVC,KA7BU,EA6BmB;AACvC,gBAAI,CAAC,KAAKC,QAAL,EAAL,EAAsB;AACpB,mBAAKT,MAAL,CAAYO,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACA,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;AAnCqB;AAAA;AAAA,qCAqCd;AACN,gBAAG,KAAKN,IAAL,CAAUC,EAAV,IAAc,CAAC,CAAlB,EAAoB;AAClB,qBAAO,IAAP;AACD,aAFD,MAEK;AACH,qBAAO,KAAP;AACD;AACF;AA3CqB;AAAA;AAAA,oCA6CZ;AACR,mBAAO,KAAKD,IAAZ;AACD;AA/CqB;;AAAA;AAAA,S;;;;gBANf;;gBADqC;;;;AAOjCH,iBAAW,6DAHvB,iEAAW;AACVY,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAXZ,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAa,WAAW;AAKtB,6BAAoBC,IAApB,EAAgC;AAAA;;AAAZ,eAAAA,IAAA,GAAAA,IAAA;AAHb,eAAAC,EAAA,GAAK,oDAAL;AACP,eAAAC,MAAA,GAAS,kBAAT;AAEmC,SALb,CAOtB;;;AAPsB;AAAA;AAAA,kCASPX,QATO,EASWY,IATX,EASuB;AAC3C,gBAAIC,GAAG,GAAG,KAAKH,EAAL,GAAU,OAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYb,QAAd;AAAwB,0BAAYY;AAApC,aAApB,EAAgE;AAAE,wBAAU,KAAKD;AAAjB,aAAhE,CAAP;AACD;AAZqB;AAAA;AAAA,4CAcGX,QAdH,EAcmB;AACvC,gBAAIa,GAAG,GAAG,KAAKH,EAAL,GAAU,QAAV,GAAqBV,QAA/B;AACA,mBAAO,KAAKS,IAAL,CAAUM,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AAjBqB;AAAA;AAAA,qCAmBJZ,EAnBI,EAmBG;AACvB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,UAAV,GAAuBX,EAAjC;AACA,mBAAO,KAAKU,IAAL,CAAUM,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AAtBqB;AAAA;AAAA,2CAwBEZ,EAxBF,EAwBS;AAC7B,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,wBAAV,GAAqCX,EAA/C;AACA,mBAAO,KAAKU,IAAL,CAAUM,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AA3BqB;AAAA;AAAA,oCA6BLZ,EA7BK,EA6BE;AACtB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,SAAV,GAAsBX,EAAhC;AACA,mBAAO,KAAKU,IAAL,CAAUM,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AAhCqB;AAAA;AAAA,oCAkCLZ,EAlCK,EAkCE;AACtB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,SAAV,GAAsBX,EAAhC;AACA,mBAAO,KAAKU,IAAL,CAAUM,GAAV,CAAcF,GAAd,EAAmB,EAAnB,EAAuB;AAAE,wBAAU,KAAKF;AAAjB,aAAvB,CAAP;AACD;AArCqB;AAAA;AAAA,kCAuCPZ,EAvCO,EAuCA;AACpB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKD,IAAL,CAAUM,GAAV,CAAcF,GAAd,EAAmB;AAAE,0BAAYd;AAAd,aAAnB,EAAuC;AAAE,wBAAU,KAAKY;AAAjB,aAAvC,CAAP;AACD,WA1CqB,CA4CtB;;AA5CsB;AAAA;AAAA,kCA8CPX,QA9CO,EA8CWC,QA9CX,EA8C2B;AAC/C,gBAAIY,GAAG,GAAG,KAAKH,EAAL,GAAU,gBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYb,QAAd;AAAwB,0BAAYC;AAApC,aAApB,EAAoE;AAAE,wBAAU,KAAKU;AAAjB,aAApE,CAAP;AACD;AAjDqB;AAAA;AAAA,oCAmDLK,KAnDK,EAmDUjB,EAnDV,EAmDgB;AACpC,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,cAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAC,wBAAUG,KAAX;AAAkB,oBAAKjB;AAAvB,aAApB,EAAgD;AAAE,wBAAU,KAAKY;AAAjB,aAAhD,CAAP;AACD;AAtDqB;AAAA;AAAA,2CAwDEM,OAxDF,EAwDgBC,OAxDhB,EAwD8BC,MAxD9B,EAwD4C;AAChE,gBAAIN,GAAG,GAAG,KAAKH,EAAL,GAAU,uBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,yBAAWI,OAAb;AAAsB,yBAAWC,OAAjC;AAA0C,8BAAgBC;AAA1D,aAApB,EAAwF;AAAE,wBAAU,KAAKR;AAAjB,aAAxF,CAAP;AACD;AA3DqB;AAAA;AAAA,mCA6DNS,MA7DM,EA6DOC,KA7DP,EA6DsBC,WA7DtB,EA6DsC;AAC1D,gBAAIT,GAAG,GAAG,KAAKH,EAAL,GAAU,YAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,wBAAUO,MAAZ;AAAoB,uBAASC,KAA7B;AAAoC,6BAAeC;AAAnD,aAApB,EAAsF;AAAE,wBAAU,KAAKX;AAAjB,aAAtF,CAAP;AACD;AAhEqB;AAAA;AAAA,mCAkENS,MAlEM,EAkEOC,KAlEP,EAkEsBE,WAlEtB,EAkEwCC,KAlExC,EAkEkD;AACtE,gBAAIX,GAAG,GAAG,KAAKH,EAAL,GAAU,YAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,wBAAUO,MAAZ;AAAoB,uBAASC,KAA7B;AAAoC,6BAAeE,WAAnD;AAAgE,qBAAOC;AAAvE,aAApB,EAAoG;AAAE,wBAAU,KAAKb;AAAjB,aAApG,CAAP;AACD;AArEqB;AAAA;AAAA,0CAuECc,OAvED,EAuEeC,OAvEf,EAuE2B;AAC/C,gBAAIb,GAAG,GAAG,KAAKH,EAAL,GAAU,iBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,yBAAWY,OAAb;AAAsB,yBAAWC;AAAjC,aAApB,EAAgE;AAAE,wBAAU,KAAKf;AAAjB,aAAhE,CAAP;AACD;AA1EqB;AAAA;AAAA,kCA4EPc,OA5EO,EA4EOL,MA5EP,EA4EkB;AACtC,gBAAIP,GAAG,GAAG,KAAKH,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKD,IAAL,CAAUK,IAAV,CAAeD,GAAf,EAAoB;AAAE,0BAAYY,OAAd;AAAuB,yBAAWL;AAAlC,aAApB,EAAgE;AAAE,wBAAU,KAAKT;AAAjB,aAAhE,CAAP;AACD,WA/EqB,CAkFtB;;AAlFsB;AAAA;AAAA,qCAoFJV,QApFI,EAoFcD,QApFd,EAoF8B;AAClD,gBAAIa,GAAG,GAAG,KAAKH,EAAL,GAAU,sBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUkB,GAAV,CAAcd,GAAd,EAAmB;AAAE,0BAAYZ,QAAd;AAAwB,0BAAYD;AAApC,aAAnB,EAAmE;AAAE,wBAAU,KAAKW;AAAjB,aAAnE,CAAP;AACD;AAvFqB;AAAA;AAAA,uCAyFFZ,EAzFE,EAyFOoB,MAzFP,EAyFuBS,GAzFvB,EAyF+B;AACnD,gBAAIf,GAAG,GAAG,KAAKH,EAAL,GAAU,sBAApB;AACA,mBAAO,KAAKD,IAAL,CAAUkB,GAAV,CAAcd,GAAd,EAAmB;AAAE,oBAAMd,EAAR;AAAY,8BAAgBoB,MAA5B;AAAoC,qBAAOS;AAA3C,aAAnB,EAAqE;AAAE,wBAAU,KAAKjB;AAAjB,aAArE,CAAP;AACD;AA5FqB;AAAA;AAAA,sCA8FHZ,EA9FG,EA8FMsB,KA9FN,EA8FmB;AACvC,gBAAIR,GAAG,GAAG,KAAKH,EAAL,GAAU,eAApB;AACA,mBAAO,KAAKD,IAAL,CAAUkB,GAAV,CAAcd,GAAd,EAAmB;AAAE,oBAAMd,EAAR;AAAY,uBAASsB;AAArB,aAAnB,EAAiD;AAAE,wBAAU,KAAKV;AAAjB,aAAjD,CAAP;AACD;AAjGqB;AAAA;AAAA,sCAmGHZ,EAnGG,EAmGMsB,KAnGN,EAmGqBE,WAnGrB,EAmGwC;AAC5D,gBAAIV,GAAG,GAAG,KAAKH,EAAL,GAAU,eAApB;AACA,mBAAO,KAAKD,IAAL,CAAUkB,GAAV,CAAcd,GAAd,EAAmB;AAAE,oBAAMd,EAAR;AAAY,uBAASsB,KAArB;AAA4B,6BAAeE;AAA3C,aAAnB,EAA6E;AAAE,wBAAU,KAAKZ;AAAjB,aAA7E,CAAP;AACD,WAtGqB,CAwGtB;;AAxGsB;AAAA;AAAA,qCA0GJZ,EA1GI,EA0GG;AACvB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,uBAAV,GAAoCX,EAA9C;AACA,mBAAO,KAAKU,IAAL,WAAiBI,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AA7GqB;AAAA;AAAA,uCA+GFZ,EA/GE,EA+GO8B,QA/GP,EA+GoB;AACxC,gBAAIhB,GAAG,GAAG,KAAKH,EAAL,GAAU,QAAV,GAAqBX,EAArB,GAA0B,UAA1B,GAAuC8B,QAAjD;AACA,mBAAO,KAAKpB,IAAL,WAAiBI,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AAlHqB;AAAA;AAAA,sCAoHHZ,EApHG,EAoHI;AACxB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,gBAAV,GAA6BX,EAAvC;AACA,mBAAO,KAAKU,IAAL,WAAiBI,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AAvHqB;AAAA;AAAA,sCAyHHZ,EAzHG,EAyHI;AACxB,gBAAIc,GAAG,GAAG,KAAKH,EAAL,GAAU,gBAAV,GAA6BX,EAAvC;AACA,mBAAO,KAAKU,IAAL,WAAiBI,GAAjB,EAAsB,EAAtB,EAA0B;AAAE,wBAAU,KAAKF;AAAjB,aAA1B,CAAP;AACD;AA5HqB;AAAA;AAAA,qCA8HJmB,QA9HI,EA8HWC,OA9HX,EA8HuB;AAC3C,gBAAIlB,GAAG,GAAG,KAAKH,EAAL,GAAU,aAApB;AACA,mBAAO,KAAKD,IAAL,WAAiBI,GAAjB,EAAsB;AAAE,0BAAYiB,QAAd;AAAwB,yBAAWC;AAAnC,aAAtB,EAAoE;AAAE,wBAAU,KAAKpB;AAAjB,aAApE,CAAP;AACD;AAjIqB;;AAAA;AAAA,S;;;;gBALf;;;;AAKIH,iBAAW,6DAHvB,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAGuB,GAAXC,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAwB,cAAc;AAEzB,gCAAoBC,QAApB,EAAiD;AAAA;;AAA7B,eAAAA,QAAA,GAAAA,QAAA;AAAgC;;AAF3B;AAAA;AAAA,2CAIKC,GAJL,EAIe;;;;;;;;;AACtB,6BAAM,KAAKD,QAAL,CAAcE,MAAd,CAAqB;AACzCC,+BAAO,EAAEF,GADgC;AAEzCG,+BAAO,EAAE,MAFgC;AAGzCC,4BAAI,EAAE,KAHmC;AAIzCC,mCAAW,EAAE;AAJ4B,uBAArB,CAAN;;;AAAVC,6B;;AAON,6BAAMA,OAAO,CAACC,OAAR,EAAN;;;;AAEuB,6BAAMD,OAAO,CAACE,YAAR,EAAN;;;;AAAfC,0B,yBAAAA,I;AAAMC,0B,yBAAAA,I;;;;;;;;;AACf;AAfwB;AAAA;AAAA,0CAiBC;;;;;;;;AACR,6BAAM,KAAKX,QAAL,CAAcE,MAAd,CAAqB;AACzCE,+BAAO,EAAE,MADgC;AAEzCC,4BAAI,EAAE,KAFmC;AAGzCC,mCAAW,EAAE;AAH4B,uBAArB,CAAN;;;AAAVC,6B;;AAMN,6BAAMA,OAAO,CAACC,OAAR,EAAN;;;;;;;;;AACD;AAzBwB;AAAA;AAAA,0CA2BL;AAClB,iBAAKR,QAAL,CAAcY,OAAd;AACD;AA7BwB;;AAAA;AAAA,S;;;;gBALlB;;;;AAKIb,oBAAc,6DAH1B,iEAAW;AACVzB,kBAAU,EAAE;AADF,OAAX,CAG0B,GAAdyB,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAc,YAAY;AAEvB,8BAAoBC,KAApB,EAA4C;AAAA;;AAAxB,eAAAA,KAAA,GAAAA,KAAA;AAA2B;;AAFxB;AAAA;AAAA,yCAIKb,GAJL,EAIiBc,SAJjB,EAIoCC,IAJpC,EAIiDC,KAJjD,EAI6D;;;;;;;;AACrE,6BAAM,KAAKH,KAAL,CAAWZ,MAAX,CAAkB;AACnCC,+BAAO,EAAEF,GAD0B;AAEnCiB,gCAAQ,EAAEH,SAFyB;AAGnCI,gCAAQ,EAAEH,IAHyB;AAInCI,gCAAQ,EAAE,KAJyB;AAKnCH,6BAAK,EAAEA,KAL4B;AAMnCZ,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATgB,4B;;AAQJ,6BAAMA,MAAM,CAACb,OAAP,EAAN;;;;;;;;;AACD;AAdsB;AAAA;AAAA,4CAgBQP,GAhBR,EAgBoBc,SAhBpB,EAgBuCC,IAhBvC,EAgBoDC,KAhBpD,EAgBgE;;;;;;;;AACxE,6BAAM,KAAKH,KAAL,CAAWZ,MAAX,CAAkB;AACnCC,+BAAO,EAAEF,GAD0B;AAEnCiB,gCAAQ,EAAEH,SAFyB;AAGnCI,gCAAQ,EAAEH,IAHyB;AAInCI,gCAAQ,EAAE,QAJyB;AAKnCH,6BAAK,EAAEA,KAL4B;AAMnCZ,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATgB,4B;;AAQJ,6BAAMA,MAAM,CAACb,OAAP,EAAN;;;;;;;;;AACD;AA1BsB;AAAA;AAAA,4CA4BQP,GA5BR,EA4BoBc,SA5BpB,EA4BuCC,IA5BvC,EA4BoDC,KA5BpD,EA4BgE;;;;;;;;AACxE,6BAAM,KAAKH,KAAL,CAAWZ,MAAX,CAAkB;AACnCC,+BAAO,EAAEF,GAD0B;AAEnCiB,gCAAQ,EAAEH,SAFyB;AAGnCI,gCAAQ,EAAEH,IAHyB;AAInCI,gCAAQ,EAAE,QAJyB;AAKnCH,6BAAK,EAAEA,KAL4B;AAMnCZ,4BAAI,EAAE;AAN6B,uBAAlB,CAAN;;;AAATgB,4B;;AAQJ,6BAAMA,MAAM,CAACb,OAAP,EAAN;;;;;;;;;AACD;AAtCsB;;AAAA;AAAA,S;;;;gBALhB;;;;AAKIK,kBAAY,6DAHxB,iEAAW;AACVvC,kBAAU,EAAE;AADF,OAAX,CAGwB,GAAZuC,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,UAAMS,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DAJjC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAT1B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,0EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,mDAAD;AAPN,OAAT,CAS0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFE,QAAQ;AAcnB,0BAAoBvD,IAApB,EACUwD,MADV,EAEUzB,OAFV,EAGU0B,KAHV,EAG8B;AAAA;;AAHV,eAAAzD,IAAA,GAAAA,IAAA;AACV,eAAAwD,MAAA,GAAAA,MAAA;AACA,eAAAzB,OAAA,GAAAA,OAAA;AACA,eAAA0B,KAAA,GAAAA,KAAA;AAfV,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,KAAA,GAAgB,EAAhB;AACA,eAAAC,SAAA,GAAiB,EAAjB;AACA,eAAAC,UAAA,GAAkB,EAAlB;AAEA,eAAAC,MAAA,GAAS,KAAT;AACA,eAAAC,IAAA,GAAO,IAAP;AACA,eAAAC,QAAA,GAAW,KAAX;AAQI,eAAKC,GAAL,GAAW,KAAKT,KAAL,CAAWU,OAAX,EAAX;AACD;;AAnBgB;AAAA;AAAA,qCAqBR,CAEV;AAvBkB;AAAA;AAAA,qCAyBJ;AACb,gBAAG,CAAC,KAAKJ,MAAT,EAAgB;AACd,mBAAKC,IAAL,GAAU,KAAV;AACA,mBAAKC,QAAL,GAAgB,KAAhB;AACA,mBAAKF,MAAL,GAAc,IAAd;AACA,mBAAKL,OAAL,GAAe,IAAf;AACD;AACF;AAhCkB;AAAA;AAAA,mCAkCN;AACX,gBAAG,CAAC,KAAKM,IAAT,EAAc;AACZ,mBAAKD,MAAL,GAAY,KAAZ;AACA,mBAAKE,QAAL,GAAgB,KAAhB;AACA,mBAAKD,IAAL,GAAY,IAAZ;AACA,mBAAKI,UAAL;AACD;AACF;AAzCkB;AAAA;AAAA,sCA2CH;AACd,gBAAG,CAAC,KAAKH,QAAT,EAAkB;AAChB,mBAAKD,IAAL,GAAU,KAAV;AACA,mBAAKD,MAAL,GAAc,KAAd;AACA,mBAAKE,QAAL,GAAgB,IAAhB;AACA,mBAAKI,aAAL;AACD;AACF;AAlDkB;AAAA;AAAA,uCAoDN;AACX,iBAAKV,SAAL,GAAiB,IAAjB;AACD;AAtDkB;AAAA;AAAA,wCAwDL;AACZ,iBAAKA,SAAL,GAAiB,KAAjB;AACD;AA1DkB;AAAA;AAAA,uCA4DF;AAAA;;AACf,iBAAKG,UAAL,GAAkB,EAAlB;AACA,iBAAK9D,IAAL,CAAUoE,UAAV,CAAqB,KAAKF,GAAL,CAAS5E,EAA9B,EAAkCgF,IAAlC,CAAuC,UAACnC,IAAD,EAAQ;AAC7C,kBAAGA,IAAH,EAAQ;AACN,oBAAIoC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWtC,IAAI,CAACA,IAAhB,CAAV;;AACA,oBAAGoC,GAAG,CAAC7D,MAAJ,IAAY,GAAf,EAAmB;AACjB6D,qBAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC5B,wBAAGA,OAAO,CAACnF,MAAR,IAAkBoF,SAArB,EAA+B;AAC7BD,6BAAO,CAACnF,MAAR,GAAiB,yBAAjB;AACD;;AACD,yBAAI,CAACqE,UAAL,CAAgBgB,IAAhB,CAAqBF,OAArB;AACD,mBALD;AAMD;AACF;AACF,aAZD,WAYS,UAACG,GAAD,EAAO,CAEf,CAdD;AAeD;AA7EkB;AAAA;AAAA,uCAgFCzF,EAhFD,EAgFG;AACpB,iBAAKU,IAAL,CAAUgF,YAAV,CAAuB1F,EAAvB,EAA2B,CAA3B,EAA8B,KAAK4E,GAAL,CAAS5E,EAAvC,EAA2CgF,IAA3C,CAAgD,UAACnC,IAAD,EAAQ;AACtD,kBAAGA,IAAH,EAAQ;AACN,oBAAIoC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWtC,IAAI,CAACA,IAAhB,CAAV;;AACA,oBAAGoC,GAAG,CAAC7D,MAAJ,IAAY,GAAf,EAAmB,CACjB;AACD,iBAFD,MAEK,CACH;AACD;AACF;AACA,aATH,WASW,UAACqE,GAAD,EAAO;AACdE,qBAAO,CAACC,KAAR,CAAc,8BAAd;AACD,aAXH;AAYD;AA7FkB;AAAA;AAAA,uCA+FOC,GA/FP,EA+FiB;;;;;;;;;AAC5BC,yB,GAAMD,GAAG,CAACE,MAAJ,CAAWC,K;AACvB,2BAAK1B,KAAL,GAAa,EAAb;AACAqB,6BAAO,CAACC,KAAR,CAAcE,GAAd;;AACA,0BAAIA,GAAG,IAAIA,GAAG,CAACG,IAAJ,MAAc,EAAzB,EAA6B;AAC3BN,+BAAO,CAACO,GAAR,CAAY,gBAAZ;AACA,6BAAKxF,IAAL,CAAUyF,iBAAV,CAA4BL,GAA5B,EAAiCd,IAAjC,CAAsC,UAAOnC,IAAP;AAAA,iCAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAChDA,IADgD;AAAA;AAAA;AAAA;;AAE9CoC,uCAF8C,GAExCC,IAAI,CAACC,KAAL,CAAWtC,IAAI,CAACA,IAAhB,CAFwC;;AAGlD,wCAAIoC,GAAG,CAAC7D,MAAJ,IAAc,GAAlB,EAAuB;AACrB;AACA6D,yCAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC5BK,+CAAO,CAACO,GAAR,CAAYZ,OAAZ;;AACA,8CAAI,CAAChB,KAAL,CAAWkB,IAAX,CAAgBF,OAAhB;AACD,uCAHD;AAID;;AATiD;AAAA;;AAAA;AAAA;AAYlD,2CAAM,KAAKpB,MAAL,CAAYkC,iBAAZ,CAA8B,wBAA9B,EAAwD,IAAxD,EAA8D,GAA9D,EAAmE,QAAnE,CAAN;;AAZkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAA,yBAAtC,WAeS,UAAOX,GAAP;AAAA,iCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtB,2CAAM,KAAKvB,MAAL,CAAYkC,iBAAZ,CAA8B,wBAA9B,EAAwD,IAAxD,EAA8D,GAA9D,EAAmE,QAAnE,CAAN;;AAFsB;AAGtBT,2CAAO,CAACO,GAAR,CAAYT,GAAZ;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAf;AAAA,yBAfT;AAoBD;;;;;;;;;AACF;AA1HkB;AAAA;AAAA,0CA4HC;AAAA;;AAClB,iBAAK1F,IAAL,GAAY,KAAKoE,KAAL,CAAWU,OAAX,EAAZ;AACA,iBAAKN,SAAL,GAAiB,EAAjB;AACA,iBAAK7D,IAAL,CAAU2F,gBAAV,CAA2B,KAAKtG,IAAL,CAAUC,EAArC,EAAyCgF,IAAzC,CAA8C,UAAOnC,IAAP;AAAA,qBAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5D,4BAAIA,IAAJ,EAAU;AACJoC,6BADI,GACEC,IAAI,CAACC,KAAL,CAAWtC,IAAI,CAACA,IAAhB,CADF;;AAER,8BAAIoC,GAAG,CAAC7D,MAAJ,IAAc,GAAlB,EAAuB;AACrB;AACA6D,+BAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC5B,oCAAI,CAACf,SAAL,CAAeiB,IAAf,CAAoBF,OAApB;AACD,6BAFD;AAGD;AACF;;AAT2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAA9C,WAUS,UAAOG,GAAP;AAAA,qBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtB,+BAAM,KAAKvB,MAAL,CAAYkC,iBAAZ,CAA8B,uCAA9B,EAAuE,IAAvE,EAA6E,GAA7E,EAAkF,QAAlF,CAAN;;AAFsB;AAGtBT,+BAAO,CAACO,GAAR,CAAYT,GAAZ;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAf;AAAA,aAVT;AAeD;AA9IkB;;AAAA;AAAA,S;;;;gBATZ;;gBAEA;;gBADA;;gBAFA;;;;AAUIxB,cAAQ,6DALpB,gEAAU;AACTqC,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0FAFS;;;;AAAA,OAAV,CAKoB,GAARtC,QAAQ,CAAR","file":"tab5-tab5-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"this.searchB\\\">\\n      <ion-button (click)=\\\"this.showSearch()\\\">\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"textColor\\\">\\n      AMIGOS\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-searchbar placeholder=\\\"Buscar\\\" (ionChange)=\\\"this.searchFriend($event)\\\" *ngIf=\\\"searchBar\\\"\\n    (ionBlur)=\\\"this.closeSearch()\\\"> </ion-searchbar>\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-segment value=\\\"all\\\">\\n      <ion-segment-button value=\\\"buscar\\\" class=\\\"background-button-toolbar\\\" (click)='this.goSearch()' class=\\\"background-button-toolbar1\\\">\\n        BUSCAR\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"peticiones\\\" class=\\\"background-button-toolbar\\\" (click)='this.goRequest()' class=\\\"background-button-toolbar\\\">\\n        PETICIONES\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"lista\\\" class=\\\"background-button-toolbar\\\" (click)='this.goList()' class=\\\"background-button-toolbar\\\">\\n        LISTA\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"this.search\\\">\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let User of this.users; let i=index\\\">\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button>\\n          <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button>\\n          <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      <ion-label>{{User.username}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.requests\\\">\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let User of this.friendReq; let i=index\\\">\\n      <ion-icon (click)=\\\"this.acceptFriend(User.id)\\\" slot=\\\"end\\\" src=\\\"assets/icon/accept.svg\\\"></ion-icon>\\n      <ion-icon slot=\\\"end\\\" src=\\\"assets/icon/cancel.svg\\\"></ion-icon>\\n      <ion-label>{{User.username}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"this.list\\\">\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let User of this.friendList; let i=index\\\">\\n      <ion-avatar>\\n        <img src=\\\"{{User.avatar}}\\\">\\n      </ion-avatar>\\n      <ion-label>{{User.username}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { User } from '../model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements CanActivate {\n\n  public user = {\n    id: -1,\n    username: '',\n    password: '',\n    avatar: ''\n  }\n\n  constructor(private storage: NativeStorage,\n    private router: Router) {\n  }\n\n  public async logout() {\n    this.user = {\n      id: -1,\n      username: '',\n      password: '',\n      avatar: ''\n    }\n    await this.storage.setItem(\"user\", this.user);\n    this.router.navigate([\"login\"]);\n  }\n\n  public async login(user: User) {\n    this.user = await this.storage.setItem(\"user\", user);\n    this.router.navigate([\"/\"]);\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    if (!this.isLogged()) {\n      this.router.navigate([\"welcome\"]);\n      return false;\n    }\n    return true;\n  }\n\n  isLogged():boolean{\n    if(this.user.id!=-1){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  getUser() {\n    return this.user;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\n  apiKey = \"HS$TF{nasiRYDk@#\";\n\n  constructor(private http: HTTP) { }\n\n  //GET methods\n\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user';\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\n  }\n\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + username;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriends(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/friend/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getPhotos(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getLike(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\n  }\n\n  //POST methods\n\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/register';\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\n  }\n\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/avatar';\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\n  }\n\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request';\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\n  }\n\n  public addRoute(idUser: any, title: string, coordinates: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates }, { 'apikey': this.apiKey });\n  }\n\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\n  }\n\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/newPhoto';\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\n  }\n\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\n  }\n\n\n  //PUT methods\n\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/profile/update';\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\n  }\n\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/update';\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\n  }\n\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\n    let url = this.ip + '/route/update';\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\n  }\n\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/update';\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\n  }\n\n  //DELETE methods\n\n  public deleteUser(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/remove/account/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteRoute(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deletePhoto(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(private loadingC: LoadingController) { }\n\n  public async createLoadingMsg(msg:string){\n    const loading = await this.loadingC.create({\n      message: msg,\n      spinner: 'dots',\n      mode: 'ios',\n      translucent: true\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  public async createLoading(){\n    const loading = await this.loadingC.create({\n      spinner: 'dots',\n      mode: 'ios',\n      translucent: true\n    });\n\n    await loading.present();\n  }\n\n  public cancelLoading(){\n    this.loadingC.dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toast: ToastController) { }\n\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: \"top\",\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'bottom',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'middle',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Tab5Page } from './tab5.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab5Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Tab5PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab5PageRoutingModule } from './tab5-routing.module';\n\nimport { Tab5Page } from './tab5.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Tab5PageRoutingModule\n  ],\n  declarations: [Tab5Page]\n})\nexport class Tab5PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjUvdGFiNS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Console } from 'console';\nimport { element } from 'protractor';\nimport { User } from '../model/User';\nimport { AuthService } from '../services/auth.service';\nimport { HttpService } from '../services/http.service';\nimport { LoadingService } from '../services/loading.service';\nimport { ToastService } from '../services/toast.service';\n\n@Component({\n  selector: 'app-tab5',\n  templateUrl: './tab5.page.html',\n  styleUrls: ['./tab5.page.scss'],\n})\nexport class Tab5Page implements OnInit {\n\n  searchB = false;\n  searchBar = false;\n  users: User[] = [];\n  friendReq:User[]=[];\n  friendList:User[]=[];\n  user:User;\n  search = false;\n  list = true;\n  requests = false;\n  you:User;\n\n\n  constructor(private http: HttpService,\n    private toastS: ToastService,\n    private loading: LoadingService,\n    private authS: AuthService) {\n      this.you = this.authS.getUser();\n    }\n\n  ngOnInit() {\n    \n  }\n\n  public goSearch(){\n    if(!this.search){\n      this.list=false;\n      this.requests = false;\n      this.search = true;\n      this.searchB = true;\n    }\n  }\n\n  public goList(){\n    if(!this.list){\n      this.search=false;\n      this.requests = false;\n      this.list = true;\n      this.getFriends();\n    }\n  }\n\n  public goRequest(){\n    if(!this.requests){\n      this.list=false;\n      this.search = false;\n      this.requests = true;\n      this.friendRequest();\n    }\n  }\n\n  showSearch() {\n    this.searchBar = true;\n  }\n\n  closeSearch() {\n    this.searchBar = false;\n  }\n\n  public getFriends(){\n    this.friendList = [];\n    this.http.getFriends(this.you.id).then((data)=>{\n      if(data){\n        let dat = JSON.parse(data.data);\n        if(dat.status==\"0\"){\n          dat.result.forEach(element => {\n            if(element.avatar == undefined){\n              element.avatar = \"assets/icon/usuario.svg\";\n            }\n            this.friendList.push(element);\n          });\n        }\n      }\n    }).catch((err)=>{\n\n    })\n  }\n\n\n  public acceptFriend(id){\n    this.http.updateFriend(id, 2, this.you.id).then((data)=>{\n      if(data){\n        let dat = JSON.parse(data.data);\n        if(dat.status==\"0\"){\n          //Toast ahora sois amigos\n        }else{\n          //Error\n        }\n      }\n      }).catch((err)=>{\n        console.error(\"Fallo al aceptar la peticion\");\n      })\n  }\n\n  public async searchFriend(evt: any) {\n    const val = evt.target.value;\n    this.users = [];\n    console.error(val);\n    if (val && val.trim() != '') {\n      console.log(\"antes del http\");\n      this.http.getUserByUsername(val).then(async (data) => {\n        if (data) {\n          let dat = JSON.parse(data.data);\n          if (dat.status == \"0\") {\n            //Todo ok\n            dat.result.forEach(element => {\n              console.log(element);\n              this.users.push(element);\n            });\n          }\n        } else {\n          //Error buscando usuario\n          await this.toastS.createToastBottom(\"No hay coincidencias 1\", true, 400, \"danger\");\n        }\n        \n      }).catch(async (err) => {\n        //Toast\n        await this.toastS.createToastBottom(\"No hay coincidencias 2\", true, 400, \"danger\");\n        console.log(err);\n      })\n    }\n  }\n\n  public friendRequest(){\n    this.user = this.authS.getUser();\n    this.friendReq = [];\n    this.http.getFriendRequest(this.user.id).then(async (data) => {\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if (dat.status == \"0\") {\n          //Todo ok\n          dat.result.forEach(element => {\n            this.friendReq.push(element);\n          });\n        }\n      }\n    }).catch(async (err) => {\n      //Toast\n      await this.toastS.createToastBottom(\"Fallo al cargar peticiones de amistad\", true, 400, \"danger\");\n      console.log(err);\n    })\n  }\n\n}\n"]}