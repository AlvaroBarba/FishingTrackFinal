{"version":3,"sources":["webpack:///src/app/pages/register/register.page.html","webpack:///src/app/pages/register/register.page.scss","webpack:///src/app/pages/register/register.page.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/loading.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["RegisterPage","modalcontroller","formBuilder","http","authService","loading","toastS","regist","group","username","required","password","minLength","dismiss","createLoading","addUser","get","value","then","data","dat","JSON","parse","status","user","id","result","login","dismissRegister","createToastBottom","cancelLoading","err","selector","template","HttpService","ip","apiKey","pass","url","post","photo","idUser1","idUser2","idUser","title","coordinates","level","description","image","idPhoto","idRoute","put","id2","idFriend","id_photo","id_user","providedIn","LoadingService","loadingC","msg","create","message","spinner","mode","translucent","present","onDidDismiss","role","ToastService","toast","animation","time","color","animated","duration","position","cToast"],"mappings":"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","file":"default~pages-register-register-module~pages-welcome-welcome-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar class=\\\"background-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button (click)=\\\"this.dismissRegister()\\\" defaultHref=\\\"/welcome\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"textColor\\\">REGISTRARSE</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content padding>\\n  <div class=\\\"content\\\">\\n    <form [formGroup]=\\\"regist\\\" (ngSubmit)=\\\"this.registration()\\\">\\n      <ion-item>\\n        <ion-input type=\\\"user\\\" formControlName=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n                <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Contraseña\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-button type=\\\"submit\\\" shape=\\\"round\\\" color=\\\"danger\\\" [disabled]=\\\"!regist.valid\\\">Registrarse</ion-button>\\n    </form>\\n  </div>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'src/app/model/User';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  public user:User;\n  public regist: FormGroup;\n\n  constructor(\n    private modalcontroller: ModalController,\n    private formBuilder: FormBuilder,\n    private http: HttpService,\n    private authService: AuthService,\n    private loading: LoadingService,\n    private toastS: ToastService) {\n    this.regist = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n   }\n\n  ngOnInit() {\n  }\n\n  public dismissRegister(){\n    this.modalcontroller.dismiss();\n  }\n\n  public async registration(){\n    //Creando Loading\n    await this.loading.createLoading();\n    //Añadir nuevo usuario\n    this.http.addUser(this.regist.get(\"username\").value, this.regist.get(\"password\").value).then(async (data)=>{\n      if (data) {\n        let dat = JSON.parse(data.data);\n        if(dat.status==\"0\"){\n          //Todo ok\n          this.user={\n            id:dat.result,\n            username:this.regist.get(\"username\").value\n          }\n          await this.authService.login(this.user);\n          this.dismissRegister();\n        }else{\n          //Error\n          this.user={\n            id:-1,\n            username:\"\"\n          }\n          await this.toastS.createToastBottom(\"Usuario en uso...\", true, 400, \"danger\");\n        }\n      }\n      //Eliminando loading\n      await this.loading.cancelLoading();\n    }).catch(async (err) =>{\n      this.user = {\n        id: -1,\n        username: ''\n      }\n      //toast\n      await this.toastS.createToastBottom(\"Usuario en uso...\", true, 400, \"danger\");\n\n      //Eliminando loading\n      await this.loading.cancelLoading();\n    }\n    )}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HTTP, HTTPResponse } from '@ionic-native/http/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public ip = \"https://fishingtrack.duckdns.org:3022/fishingtrack\";\n  apiKey = \"HS$TF{nasiRYDk@#\";\n\n  constructor(private http: HTTP) { }\n\n  //GET methods\n\n  public getUser(username: string, pass: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user';\n    return this.http.post(url, { 'username': username, 'password': pass }, { 'apikey': this.apiKey });\n  }\n\n  public getUserByUsername(username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + username;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriends(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/friend/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getFriendRequest(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getCountRoutes(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/routes/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getPhotos(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/' + id;\n    return this.http.get(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public getLike(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.get(url, { 'id_photo': id }, { 'apikey': this.apiKey });\n  }\n\n  //POST methods\n\n  public addUser(username: string, password: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/register';\n    return this.http.post(url, { 'username': username, 'password': password }, { 'apikey': this.apiKey });\n  }\n\n  public addAvatar(photo: string, id:any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/avatar';\n    return this.http.post(url, {'avatar': photo, 'id':id}, { 'apikey': this.apiKey });\n  }\n\n  public addFriendRequest(idUser1: any, idUser2: any, status: number): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/request';\n    return this.http.post(url, { 'idUser1': idUser1, 'idUser2': idUser2, 'friendStatus': status }, { 'apikey': this.apiKey });\n  }\n\n  public addRoute(idUser: any, title: string, coordinates: any, level:any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'coordinates': coordinates, 'level': level }, { 'apikey': this.apiKey });\n  }\n\n  public addPhoto(idUser: any, title: string, description: any, image: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/add';\n    return this.http.post(url, { 'idUser': idUser, 'title': title, 'description': description, 'url': image }, { 'apikey': this.apiKey });\n  }\n\n  public addPhotoToRoute(idPhoto: any, idRoute: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/newPhoto';\n    return this.http.post(url, { 'idPhoto': idPhoto, 'idRoute': idRoute }, { 'apikey': this.apiKey });\n  }\n\n  public addLike(idPhoto: any, idUser: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.post(url, { 'id_photo': idPhoto, 'id_user': idUser }, { 'apikey': this.apiKey });\n  }\n\n\n  //PUT methods\n\n  public updateUser(password: string, username: string): Promise<HTTPResponse> {\n    let url = this.ip + '/user/profile/update';\n    return this.http.put(url, { 'password': password, 'username': username }, { 'apikey': this.apiKey });\n  }\n\n  public updateFriend(id: any, status: number, id2: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/friends/update';\n    return this.http.put(url, { 'id': id, 'friendStatus': status, 'id2': id2 }, { 'apikey': this.apiKey });\n  }\n\n  public updateRoute(id: any, title: string): Promise<HTTPResponse> {\n    let url = this.ip + '/route/update';\n    return this.http.put(url, { 'id': id, 'title': title }, { 'apikey': this.apiKey });\n  }\n\n  public updatePhoto(id: any, title: string, description: string): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/update';\n    return this.http.put(url, { 'id': id, 'title': title, 'description': description }, { 'apikey': this.apiKey });\n  }\n\n  //DELETE methods\n\n  public deleteUser(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/remove/account/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteFriend(id: any, idFriend: any): Promise<HTTPResponse> {\n    let url = this.ip + '/user/' + id + '/friend/' + idFriend;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteRoute(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/route/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deletePhoto(id: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/remove/' + id;\n    return this.http.delete(url, {}, { 'apikey': this.apiKey });\n  }\n\n  public deleteLike(id_photo: any, id_user: any): Promise<HTTPResponse> {\n    let url = this.ip + '/photo/like';\n    return this.http.delete(url, { 'id_photo': id_photo, 'id_user': id_user }, { 'apikey': this.apiKey });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  constructor(private loadingC: LoadingController) { }\n\n  public async createLoadingMsg(msg:string){\n    const loading = await this.loadingC.create({\n      message: msg,\n      spinner: 'dots',\n      mode: 'ios',\n      translucent: true\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  public async createLoading(){\n    const loading = await this.loadingC.create({\n      spinner: 'dots',\n      mode: 'ios',\n      translucent: true\n    });\n\n    await loading.present();\n  }\n\n  public cancelLoading(){\n    this.loadingC.dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toast: ToastController) { }\n\n  public async createToastTop(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: \"top\",\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastBottom(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'bottom',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n\n  public async createToastMiddle(msg:string, animation:boolean, time:number, color:string){\n    let cToast = await this.toast.create({\n      message: msg,\n      animated: animation,\n      duration: time,\n      position: 'middle',\n      color: color,\n      mode: \"ios\"\n    });\n    await cToast.present();\n  }\n}\n"]}